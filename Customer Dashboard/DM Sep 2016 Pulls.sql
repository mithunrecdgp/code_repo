DROP DATABASE IF EXISTS BRDMSEP2016 CASCADE;
CREATE DATABASE BRDMSEP2016 LOCATION '/apps/hive/warehouse/aa_cem/xtghosh/BRDMSEP2016.db';

SET mapred.job.queue.name=mtl;
SET hive.cli.print.header=true;
SET hive.variable.substitute.depth=100;

SET END_DT = 2015-09-15;  SET START_DT = 2015-04-16;


DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS;	   
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS AS
SELECT
T1.CUSTOMER_KEY, 
T1.ORDER_STATUS, 
COUNT(DISTINCT T1.TRANSACTION_NUM) AS DISTINCT_TRANSACTION_NUM, 
COUNT(DISTINCT T1.ORDER_NUM) AS DISTINCT_ORDER_NUM,
SUM(T1.ITEM_QTY) AS ITEM_QTY, 
SUM(T1.GROSS_SALES_AMT) AS GROSS_SALES_AMT, 
SUM(T1.DISCOUNT_AMT) AS DISCOUNT_AMT, 
SUM(T1.TOT_PRD_CST_AMT) AS TOT_PRD_CST_AMT
FROM MDS_NEW.ODS_ORDERHEADER_T T1 
WHERE 
T1.BRAND='BR' AND T1.COUNTRY='US' AND T1.TRANSACTION_TYPE_CD IN ('S','M', 'R') AND
(
(T1.ORDER_STATUS='R' AND
 UNIX_TIMESTAMP(T1.SHIP_DATE,'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP('${hiveconf:START_DT}', 'yyyy-MM-dd') AND UNIX_TIMESTAMP('${hiveconf:END_DT}', 'yyyy-MM-dd')
 ) OR
(T1.ORDER_STATUS='O' AND
 UNIX_TIMESTAMP(T1.DEMAND_DATE, 'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP('${hiveconf:START_DT}', 'yyyy-MM-dd') AND UNIX_TIMESTAMP('${hiveconf:END_DT}', 'yyyy-MM-dd')
)
)
GROUP BY T1.CUSTOMER_KEY, T1.ORDER_STATUS;




DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_1;
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_1 AS SELECT
T1.CUSTOMER_KEY, 
T2.OPEN_DATE, 
T2.REISSUE_DATE, 
T2.BRAND, 
T2.PLATE_CODE, 
T2.PLCC_DROPPED, 
T2.EST_CLOSED_DT, 
T2.CARD_TYP
FROM 
(
SELECT DISTINCT CUSTOMER_KEY FROM BRDMSEP2016.SHOPPERS18TO12MONTHS
) T1
LEFT OUTER JOIN 
MDS_NEW.ODS_PLCC_CARDHOLDER_T T2
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
WHERE 
TO_DATE(T2.OPEN_DATE) <= DATE_ADD('${hiveconf:START_DT}', 365) AND 
(
TO_DATE(T2.EST_CLOSED_DT) IS NULL OR 
TO_DATE(T2.EST_CLOSED_DT) > DATE_ADD('${hiveconf:START_DT}', 1)
);




DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_2;
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_2 AS SELECT
T1.CUSTOMER_KEY, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP,
MAX(T1.OPEN_DATE) AS OPEN_DATE, MAX(T1.REISSUE_DATE) AS REISSUE_DATE, MAX(T1.EST_CLOSED_DT) AS EST_CLOSED_DT
FROM BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_1 T1 
GROUP BY T1.CUSTOMER_KEY, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP;

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_1;



DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_3;
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_3 AS SELECT
T1.CUSTOMER_KEY, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP,  
T1.OPEN_DATE, T1.REISSUE_DATE,  T1.EST_CLOSED_DT,
(CASE WHEN BRAND='BR' AND PLATE_CODE<4 THEN 1 ELSE 0 END) BASIC_FLAG,
(CASE WHEN BRAND='BR' AND PLATE_CODE=4 THEN 1 ELSE 0 END) SILVER_FLAG,
(CASE WHEN BRAND<>'BR' THEN 1 ELSE 0 END) SISTER_FLAG
FROM BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_2 T1;

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_2;


DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_4;             
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_4 AS SELECT
CUSTOMER_KEY, 
MAX(BASIC_FLAG) AS BASIC_FLAG,
MAX(SISTER_FLAG) AS SISTER_FLAG,
MAX(SILVER_FLAG) AS SILVER_FLAG
FROM BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_3
GROUP BY CUSTOMER_KEY;

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_3; 


DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_5; 
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_5 AS SELECT
T1.CUSTOMER_KEY, T2.BASIC_FLAG, T2.SILVER_FLAG, T2.SISTER_FLAG
FROM BRDMSEP2016.SHOPPERS18TO12MONTHS T1
LEFT OUTER JOIN BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_4 T2
ON T1.CUSTOMER_KEY=T2.CUSTOMER_KEY;

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_4;                    


DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS;  
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS AS SELECT
CUSTOMER_KEY, BASIC_FLAG, SILVER_FLAG, SISTER_FLAG,
(
CASE 
WHEN SILVER_FLAG = 1 THEN 1
WHEN BASIC_FLAG = 1 AND SILVER_FLAG <> 1 THEN 2
WHEN SISTER_FLAG = 1 AND SILVER_FLAG <> 1 AND BASIC_FLAG <> 1 THEN 3 
ELSE 4 
END
) AS CARD_STATUS
FROM BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_5;

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS_5; 





DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_SHOPPERSRECENT12MONTHS;	   
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_SHOPPERSRECENT12MONTHS AS
SELECT
T1.CUSTOMER_KEY 
FROM MDS_NEW.ODS_ORDERHEADER_T T1
INNER JOIN
BRDMSEP2016.SHOPPERS18TO12MONTHS T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
WHERE 
T1.BRAND='BR' AND T1.COUNTRY='US' AND T1.TRANSACTION_TYPE_CD IN ('S','M', 'R') AND
(
(T1.ORDER_STATUS='R' AND
 UNIX_TIMESTAMP(T1.SHIP_DATE,'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',1) , 'yyyy-MM-dd') AND UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',365), 'yyyy-MM-dd')
 ) OR
(T1.ORDER_STATUS='O' AND
 UNIX_TIMESTAMP(T1.DEMAND_DATE, 'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',1) , 'yyyy-MM-dd') AND UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',365), 'yyyy-MM-dd')
)
)
;

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS;	   
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS 
AS SELECT T1.*, T2.CARD_STATUS
FROM
BRDMSEP2016.SHOPPERS18TO12MONTHS T1
INNER JOIN
BRDMSEP2016.SHOPPERS18TO12MONTHS_CURRENTCARDSTATUS T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
FULL OUTER JOIN
BRDMSEP2016.SHOPPERS18TO12MONTHS_SHOPPERSRECENT12MONTHS T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
WHERE
T3.CUSTOMER_KEY IS NULL;


 

DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS_OBSHOPPERSRECENT12MONTHS;	   
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS_OBSHOPPERSRECENT12MONTHS 
AS SELECT 
T1.CUSTOMER_KEY,
T1.ORDER_STATUS AS OB_ORDER_STATUS,
COUNT(DISTINCT T1.TRANSACTION_NUM) AS OB_DISTINCT_TRANSACTION_NUM, 
COUNT(DISTINCT T1.ORDER_NUM) AS OB_DISTINCT_ORDER_NUM,
SUM(T1.ITEM_QTY) AS OB_ITEM_QTY, 
SUM(T1.GROSS_SALES_AMT) AS OB_GROSS_SALES_AMT, 
SUM(T1.DISCOUNT_AMT) AS OB_DISCOUNT_AMT, 
SUM(T1.TOT_PRD_CST_AMT) AS OB_TOT_PRD_CST_AMT
FROM MDS_NEW.ODS_ORDERHEADER_T T1 
INNER JOIN
BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
WHERE 
T1.BRAND!='BR' AND T1.COUNTRY='US' AND T1.TRANSACTION_TYPE_CD IN ('S','M', 'R') AND
(
(T1.ORDER_STATUS='R' AND
 UNIX_TIMESTAMP(T1.SHIP_DATE,'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',1) , 'yyyy-MM-dd') AND UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',365), 'yyyy-MM-dd')
 ) OR
(T1.ORDER_STATUS='O' AND
 UNIX_TIMESTAMP(T1.DEMAND_DATE, 'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',1) , 'yyyy-MM-dd') AND UNIX_TIMESTAMP(DATE_ADD('${hiveconf:END_DT}',365), 'yyyy-MM-dd')
)
)
GROUP BY T1.CUSTOMER_KEY, T1.ORDER_STATUS;


DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS_SUMMARY;	   
CREATE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS_SUMMARY
AS SELECT 
T1.CUSTOMER_KEY,
SUM(T1.RETAIL_TRANSACTIONS) AS RETAIL_TRANSACTIONS,
SUM(T1.ONLINE_TRANSACTIONS) AS ONLINE_TRANSACTIONS,
SUM(T1.RETAIL_TRANSACTIONS) + SUM(T1.ONLINE_TRANSACTIONS) AS TOTAL_TRANSACTIONS,
SUM(T1.ITEM_QTY) AS ITEM_QTY, 
SUM(T1.GROSS_SALES_AMT) AS GROSS_SALES_AMT, 
SUM(T1.DISCOUNT_AMT) AS DISCOUNT_AMT, 
NVL(SUM(T1.GROSS_SALES_AMT),0) + NVL(SUM(T1.DISCOUNT_AMT),0) AS NET_SALES_AMT, 
SUM(T1.TOT_PRD_CST_AMT) AS TOT_PRD_CST_AMT,
MAX(T1.CARD_STATUS) AS CARD_STATUS
FROM
(
SELECT 
CUSTOMER_KEY,
ITEM_QTY,
GROSS_SALES_AMT,
DISCOUNT_AMT,
TOT_PRD_CST_AMT,
CARD_STATUS,
(
CASE WHEN ORDER_STATUS='R' THEN DISTINCT_TRANSACTION_NUM ELSE CAST(0 AS BIGINT) END
) AS RETAIL_TRANSACTIONS, 
(
CASE WHEN ORDER_STATUS='O' THEN DISTINCT_ORDER_NUM ELSE CAST(0 AS BIGINT) END
) AS ONLINE_TRANSACTIONS 
FROM
BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS
) T1
GROUP BY
T1.CUSTOMER_KEY;


DROP TABLE IF EXISTS BRDMSEP2016.SHOPPERS18TO12MONTHS_INACTIVENOW;
CREATE EXTERNAL TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_INACTIVENOW
(
CUSTOMER_KEY            BIGINT,
RETAIL_TRANSACTIONS     BIGINT,
ONLINE_TRANSACTIONS     BIGINT,
TOTAL_TRANSACTIONS      BIGINT, 
ITEM_QTY                BIGINT,
GROSS_SALES_AMT         DOUBLE,
DISCOUNT_AMT            DOUBLE,
NET_SALES_AMT           DOUBLE,
TOT_PRD_CST_AMT         DOUBLE,
CARD_STATUS             INT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
LOCATION '/user/xtghosh/SHOPPERS18TO12MONTHS_INACTIVENOW'
TBLPROPERTIES ('serialization.null.format' = '')
;

INSERT OVERWRITE TABLE BRDMSEP2016.SHOPPERS18TO12MONTHS_INACTIVENOW
SELECT
*
FROM
BRDMSEP2016.SHOPPERS18TO12MONTHS_NOTSHOPPERSRECENT12MONTHS_SUMMARY;


hadoop dfs -getmerge '/user/xtghosh/SHOPPERS18TO12MONTHS_INACTIVENOW' '/home/xtghosh'


