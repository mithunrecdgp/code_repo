--SET GLOBAL VARIABLES AND CREATE DATABASE;

SET CAMPAIGN_VERSION = 1679576; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = 1679576;

SET CAMPAIGN_VERSION = 1714234; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = 1714234;

SET CAMPAIGN_VERSION = 1876838; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = 1876838;

SET CAMPAIGN_VERSION = 1897094; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = 1897094;

SET CAMPAIGN_VERSION = 1933662; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = 1933662;

SET CAMPAIGN_VERSION = 1943469; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = 1943469;



SET CAMPAIGN_VERSION = 1959767; SET CURRENT_BRAND = GP; SET CURRENT_COUNTRY = US; SET SISTER_CAMPAIGN_VERSION = (1959769, 1959768);


SET mapred.job.queue.name=cem;
SET hive.cli.print.header=true;
SET hive.variable.substitute.depth=100;

DROP DATABASE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION} CASCADE;
CREATE DATABASE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION} 
LOCATION '/apps/hive/warehouse/aa_cem/xtghosh/${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.db';


USE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION};
SHOW TABLES;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1 STORED AS ORC AS
SELECT DISTINCT 
T1.CUSTOMER_KEY, TO_DATE(T2.EVENT_DATE) AS EVENT_DATE,
CASE WHEN T1.CUSTOMER_KEY > 0 THEN ${hiveconf:CAMPAIGN_VERSION} ELSE NULL END AS CAMPAIGN_VERSION
FROM 
MDS_NEW.ODS_MAILINGEMAIL_T T1
INNER JOIN
(
SELECT MIN(TO_DATE(EVENT_DATE)) AS EVENT_DATE FROM 
MDS_NEW.ODS_MAILINGEMAIL_T
WHERE CAMPAIGN_VERSION=${hiveconf:CAMPAIGN_VERSION} OR CAMPAIGN_VERSION IN ${hiveconf:SISTER_CAMPAIGN_VERSION}
) T2
WHERE T1.CAMPAIGN_VERSION=${hiveconf:CAMPAIGN_VERSION} OR T1.CAMPAIGN_VERSION IN ${hiveconf:SISTER_CAMPAIGN_VERSION};



SELECT CAMPAIGN_VERSION, EVENT_DATE, COUNT(*), COUNT(DISTINCT CUSTOMER_KEY) 
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1
GROUP BY CAMPAIGN_VERSION, EVENT_DATE;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_2 STORED AS ORC AS
SELECT DISTINCT
T1.CUSTOMER_KEY,
(
CASE WHEN T4.CUSTOMER_KEY > 0 THEN 1 ELSE 0 END
) AS EMAILOPENFLAG
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1 T1
INNER JOIN
(
SELECT DISTINCT T2.CUSTOMER_KEY, TO_DATE(EVENT_DATE) AS EVENT_DATE 
FROM 
MDS_NEW.ODS_EMAILOPENS_T T2
WHERE 
T2.CAMPAIGN_VERSION = ${hiveconf:CAMPAIGN_VERSION}
) T4
ON 
T1.CUSTOMER_KEY = T4.CUSTOMER_KEY
INNER JOIN
(
SELECT 
MIN(TO_DATE(EVENT_DATE)) AS START_DT, 
DATE_ADD(MIN(TO_DATE(EVENT_DATE)), 1) AS END_DT 
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1
) T3
WHERE
UNIX_TIMESTAMP(TO_DATE(T4.EVENT_DATE), 'yyyy-MM-dd') BETWEEN
UNIX_TIMESTAMP(T3.START_DT, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T3.END_DT, 'yyyy-MM-dd')
;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_3;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_3 STORED AS ORC AS
SELECT DISTINCT
T1.CUSTOMER_KEY,
(
CASE WHEN T4.CUSTOMER_KEY > 0 THEN 1 ELSE 0 END
) AS EMAILCLICKFLAG
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1 T1
INNER JOIN
(
SELECT T2.CUSTOMER_KEY, TO_DATE(CLICK_DATE) AS CLICK_DATE  
FROM 
MDS_NEW.ODS_EMAILCLICKS_T T2
WHERE 
T2.CAMPAIGN_VERSION = ${hiveconf:CAMPAIGN_VERSION}
) T4
ON 
T1.CUSTOMER_KEY = T4.CUSTOMER_KEY
INNER JOIN
(
SELECT 
MIN(TO_DATE(EVENT_DATE)) AS START_DT, 
DATE_ADD(MIN(TO_DATE(EVENT_DATE)), 1) AS END_DT 
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1
) T3
WHERE
UNIX_TIMESTAMP(TO_DATE(T4.CLICK_DATE), 'yyyy-MM-dd') BETWEEN
UNIX_TIMESTAMP(T3.START_DT, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T3.END_DT, 'yyyy-MM-dd')
;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED STORED AS ORC AS
SELECT
T1.*, T2.EMAILOPENFLAG, T3.EMAILCLICKFLAG
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1 T1
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_2 T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_3 T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_1;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_2;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED_3;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_1;	   
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_1 STORED AS ORC AS
SELECT
T1.CUSTOMER_KEY,
T1.ORDER_DATE,
T1.ORDER_STATUS, 
T1.TRANSACTION_TYPE_CD,
T1.TRANSACTION_NUM,
T1.ORDER_NUM,
T1.DEMAND_DATE,
T1.SHIP_DATE,
T1.BRAND,
T1.COUNTRY
FROM 
(
SELECT *,
(
CASE
WHEN ORDER_STATUS = 'R' THEN SHIP_DATE
ELSE TO_DATE(DEMAND_DATE)
END
) AS ORDER_DATE
FROM MDS_NEW.ODS_ORDERHEADER_T
) T1
INNER JOIN
(
SELECT DISTINCT CUSTOMER_KEY
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED 
) T2
ON T1.CUSTOMER_KEY=T2.CUSTOMER_KEY
INNER JOIN
(
SELECT 
MIN(TO_DATE(EVENT_DATE)) AS START_DT, 
DATE_ADD(MIN(TO_DATE(EVENT_DATE)), 1) AS END_DT 
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED
) T3
WHERE 
T1.BRAND='${hiveconf:CURRENT_BRAND}' AND T1.COUNTRY='${hiveconf:CURRENT_COUNTRY}' AND T1.TRANSACTION_TYPE_CD IN ('S', 'M', 'R') AND
(
(T1.ORDER_STATUS='R' AND
 UNIX_TIMESTAMP(T1.SHIP_DATE,'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP(T3.START_DT, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T3.END_DT, 'yyyy-MM-dd')
 ) OR
(T1.ORDER_STATUS='O' AND
 UNIX_TIMESTAMP(T1.DEMAND_DATE, 'yyyy-MM-dd') BETWEEN
 UNIX_TIMESTAMP(T3.START_DT, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T3.END_DT, 'yyyy-MM-dd')
)
)
;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_2;	   
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_2 STORED AS ORC AS
SELECT
T1.*,
T2.LINE_NUM,
T2.ITEM_QTY,
T2.SALES_AMT,
T3.DISCOUNT_AMT,
T2.TOT_PRD_CST_AMT,
T2.PRODUCT_KEY
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_1 T1
INNER JOIN
MDS_NEW.ODS_ORDERLINE_T T2
ON
T1.TRANSACTION_NUM = T2.TRANSACTION_NUM
LEFT OUTER JOIN
(
SELECT 
TRANSACTION_NUM, LINE_NUM, SUM(DISCOUNT_AMT) AS DISCOUNT_AMT
FROM
MDS_NEW.ODS_ORDERLINE_DISCOUNTS_T
GROUP BY TRANSACTION_NUM, LINE_NUM
) T3
ON
T2.TRANSACTION_NUM = T3.TRANSACTION_NUM AND
T2.LINE_NUM = T3.LINE_NUM;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_ONL;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_ONL 
STORED AS ORC AS SELECT
T1.*,
CASE WHEN T3.NUM_TXNS_ONL > 0 THEN 1 ELSE 0 END AS ONL_RESPONDER,
T3.NUM_TXNS_ONL,
T3.ITEM_QTY_ONL,
T3.GROSS_SALES_AMT_ONL,
T3.DISCOUNT_AMT_ONL,
T3.TOT_PRD_CST_AMT_ONL,
T3.NET_SALES_AMT_ONL,
T3.NET_MARGIN_ONL
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED T1
LEFT OUTER JOIN
(
SELECT
T2.CUSTOMER_KEY,
COUNT(DISTINCT ORDER_NUM) AS NUM_TXNS_ONL,
SUM(T2.ITEM_QTY) AS ITEM_QTY_ONL,
SUM(T2.SALES_AMT) AS GROSS_SALES_AMT_ONL,
SUM(T2.DISCOUNT_AMT) AS DISCOUNT_AMT_ONL,
SUM(T2.TOT_PRD_CST_AMT) AS TOT_PRD_CST_AMT_ONL,
NVL(SUM(T2.SALES_AMT), 0) + NVL(SUM(T2.DISCOUNT_AMT), 0) AS NET_SALES_AMT_ONL,
NVL(SUM(T2.SALES_AMT), 0) + NVL(SUM(T2.DISCOUNT_AMT), 0) - NVL(SUM(T2.TOT_PRD_CST_AMT), 0) AS NET_MARGIN_ONL
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_2 T2
WHERE
T2.ORDER_STATUS = 'O' AND T2.SALES_AMT > 0  AND T2.ITEM_QTY > 0
GROUP BY 
T2.CUSTOMER_KEY
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_RTL;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_RTL 
STORED AS ORC AS SELECT
T1.*,
CASE WHEN T3.NUM_TXNS_RTL > 0 THEN 1 ELSE 0 END AS RTL_RESPONDER,
T3.NUM_TXNS_RTL,
T3.ITEM_QTY_RTL,
T3.GROSS_SALES_AMT_RTL,
T3.DISCOUNT_AMT_RTL,
T3.TOT_PRD_CST_AMT_RTL,
T3.NET_SALES_AMT_RTL,
T3.NET_MARGIN_RTL
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED T1
LEFT OUTER JOIN
(
SELECT
T2.CUSTOMER_KEY,
COUNT(DISTINCT TRANSACTION_NUM) AS NUM_TXNS_RTL,
SUM(T2.ITEM_QTY) AS ITEM_QTY_RTL,
SUM(T2.SALES_AMT) AS GROSS_SALES_AMT_RTL,
SUM(T2.DISCOUNT_AMT) AS DISCOUNT_AMT_RTL,
SUM(T2.TOT_PRD_CST_AMT) AS TOT_PRD_CST_AMT_RTL,
NVL(SUM(T2.SALES_AMT), 0) + NVL(SUM(T2.DISCOUNT_AMT), 0) AS NET_SALES_AMT_RTL,
NVL(SUM(T2.SALES_AMT), 0) + NVL(SUM(T2.DISCOUNT_AMT), 0) - NVL(SUM(T2.TOT_PRD_CST_AMT), 0) AS NET_MARGIN_RTL
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_2 T2
WHERE
T2.ORDER_STATUS = 'R' AND T2.SALES_AMT > 0  AND T2.ITEM_QTY > 0
GROUP BY 
T2.CUSTOMER_KEY
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM
STORED AS ORC AS SELECT
T1.CAMPAIGN_VERSION,
T1.CUSTOMER_KEY,
T1.EVENT_DATE,
T1.EMAILOPENFLAG,
T1.EMAILCLICKFLAG,
T1.RTL_RESPONDER,
T1.NUM_TXNS_RTL,
T1.ITEM_QTY_RTL,
T1.GROSS_SALES_AMT_RTL,
T1.DISCOUNT_AMT_RTL,
T1.TOT_PRD_CST_AMT_RTL,
T1.NET_SALES_AMT_RTL,
T1.NET_MARGIN_RTL,
T2.ONL_RESPONDER,
T2.NUM_TXNS_ONL,
T2.ITEM_QTY_ONL,
T2.GROSS_SALES_AMT_ONL,
T2.DISCOUNT_AMT_ONL,
T2.TOT_PRD_CST_AMT_ONL,
T2.NET_SALES_AMT_ONL,
T2.NET_MARGIN_ONL,
NVL(T1.RTL_RESPONDER,0) + NVL(T2.ONL_RESPONDER,0) AS RESPONDER,
NVL(T1.NUM_TXNS_RTL,0) + NVL(T2.NUM_TXNS_ONL,0) AS NUM_TXNS,
NVL(T1.ITEM_QTY_RTL,0) + NVL(T2.ITEM_QTY_ONL,0) AS ITEM_QTY,
NVL(T1.GROSS_SALES_AMT_RTL,0) + NVL(T2.GROSS_SALES_AMT_ONL,0) AS GROSS_SALES_AMT,
NVL(T1.DISCOUNT_AMT_RTL,0) + NVL(T2.DISCOUNT_AMT_ONL,0) AS DISCOUNT_AMT,
NVL(T1.TOT_PRD_CST_AMT_RTL,0) + NVL(T2.TOT_PRD_CST_AMT_ONL,0) AS TOT_PRD_CST_AMT,
NVL(T1.NET_SALES_AMT_RTL,0) + NVL(T2.NET_SALES_AMT_ONL,0) AS NET_SALES_AMT,
NVL(T1.NET_MARGIN_RTL,0) + NVL(T2.NET_MARGIN_ONL,0) AS NET_MARGIN
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_RTL T1
INNER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_ONL T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
;


SELECT
COUNT(CUSTOMER_KEY) AS COUNT, 
SUM(RESPONDER) AS RESPONDERS,  SUM(RESPONDER)/COUNT(CUSTOMER_KEY) AS RESPONSE_RATE,
SUM(RTL_RESPONDER) AS RTL_RESPONDERS,  SUM(RTL_RESPONDER)/COUNT(CUSTOMER_KEY) AS RTL_RESPONSE_RATE,
SUM(ONL_RESPONDER) AS ONL_RESPONDERS,  SUM(ONL_RESPONDER)/COUNT(CUSTOMER_KEY) AS ONL_RESPONSE_RATE
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM;



DROP TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP;
DROP TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_1;
DROP TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_2;
DROP TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_ONL;
DROP TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_RESPONSE_GRP_RTL;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1 
STORED AS ORC 
AS SELECT 
T2.CUSTOMER_KEY,
(
CASE
WHEN T1.ORDER_STATUS = 'R' THEN T1.SHIP_DATE
ELSE TO_DATE(T1.DEMAND_DATE)
END
) AS ORDER_DATE,
T1.ORDER_STATUS, 
T1.TRANSACTION_TYPE_CD,
T1.TRANSACTION_NUM,
T1.ORDER_NUM,
T1.DEMAND_DATE,
T1.SHIP_DATE,
T1.BRAND,
T1.COUNTRY,
T1.PRIMARY_TENDER_TYPE
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T2 
LEFT OUTER JOIN
MDS_NEW.ODS_ORDERHEADER_T T1 
ON 
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
INNER JOIN
(
SELECT 
MIN(TO_DATE(EVENT_DATE)) AS START_DT, 
DATE_ADD(MIN(TO_DATE(EVENT_DATE)), 1) AS END_DT 
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED
) T3
WHERE
T1.COUNTRY='US' AND
(
(UNIX_TIMESTAMP(T1.SHIP_DATE,'yyyy-MM-dd') BETWEEN 
 UNIX_TIMESTAMP(DATE_SUB(T3.START_DT, 1 + 365), 'yyyy-MM-dd')  AND 
 UNIX_TIMESTAMP(DATE_SUB(T3.START_DT, 1), 'yyyy-MM-dd')  AND 
 T1.ORDER_STATUS = 'R'
) OR
(UNIX_TIMESTAMP(T1.DEMAND_DATE, 'yyyy-MM-dd_HH-mm-ss_Z') BETWEEN
 UNIX_TIMESTAMP(DATE_SUB(T3.START_DT, 1 + 365), 'yyyy-MM-dd')  AND 
 UNIX_TIMESTAMP(DATE_SUB(T3.START_DT, 1), 'yyyy-MM-dd')  AND 
 T1.ORDER_STATUS = 'O'
)
);




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE 
STORED AS ORC 
AS SELECT
MAX(TO_DATE(ORDER_DATE)) AS MAXDATE, MIN(TO_DATE(ORDER_DATE)) AS MINDATE
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2
STORED AS ORC 
AS SELECT
T1.*,
T2.LINE_NUM,
T2.ITEM_QTY,
T2.SALES_AMT,
T3.DISCOUNT_AMT,
T2.TOT_PRD_CST_AMT,
(
CASE
WHEN T2.ON_SALE_FLAG='Y' THEN 1
ELSE NULL
END
) AS ONSALE_IND,
T2.PRODUCT_KEY
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_1 T1
INNER JOIN
MDS_NEW.ODS_ORDERLINE_T T2
ON
T1.TRANSACTION_NUM = T2.TRANSACTION_NUM
LEFT OUTER JOIN
(
SELECT 
TRANSACTION_NUM, LINE_NUM, SUM(DISCOUNT_AMT) AS DISCOUNT_AMT
FROM
MDS_NEW.ODS_ORDERLINE_DISCOUNTS_T
GROUP BY TRANSACTION_NUM, LINE_NUM
) T3
ON
T2.TRANSACTION_NUM = T3.TRANSACTION_NUM AND
T2.LINE_NUM = T3.LINE_NUM;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3 
STORED AS ORC 
AS SELECT
T1.CUSTOMER_KEY, 
T1.TRANSACTION_NUM,
T1.ORDER_NUM,
T1.SHIP_DATE, 
T1.DEMAND_DATE, 
T1.BRAND, 
T1.COUNTRY, 
T1.ORDER_STATUS, 
T1.TRANSACTION_TYPE_CD, 
T1.PRIMARY_TENDER_TYPE, 
T1.ITEM_QTY, 
T1.SALES_AMT AS GROSS_SALES_AMT, 
T1.DISCOUNT_AMT, 
T1.TOT_PRD_CST_AMT, 
T1.ORDER_DATE,
T1.PRODUCT_KEY,
T1.ONSALE_IND,
T1.LINE_NUM,
(CASE
WHEN T1.ORDER_STATUS = 'O' THEN 1
ELSE NULL
END) AS FLAG_ONL,
(CASE
WHEN T1.ORDER_STATUS = 'R' THEN 1
ELSE NULL
END) AS FLAG_RTL,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 365), 'yyyy-MM-dd') AND 
T1.ORDER_STATUS = 'O' THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_12MO, 
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 183), 'yyyy-MM-dd')  AND 
T1.ORDER_STATUS = 'O' THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_6MO, 
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 365), 'yyyy-MM-dd')  AND 
T1.ORDER_STATUS = 'O' AND 
T1.PRIMARY_TENDER_TYPE IN ('BR','GP','ON','VB','VG','VO') THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_PLCC_12MO,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 183), 'yyyy-MM-dd')  AND 
T1.ORDER_STATUS = 'O' AND 
T1.PRIMARY_TENDER_TYPE IN ('BR','GP','ON','VB','VG','VO') THEN ORDER_NUM
ELSE NULL
END) AS ORDER_NUM_PLCC_6MO,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 365), 'yyyy-MM-dd')  THEN 1
ELSE NULL
END) AS FLAG_12MO,
(CASE
WHEN UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') >= UNIX_TIMESTAMP(DATE_SUB(T2.MAXDATE, 183), 'yyyy-MM-dd')  THEN 1
ELSE NULL
END) AS FLAG_6MO,
(CASE 
WHEN T1.PRIMARY_TENDER_TYPE IN ('BR','GP','ON','VB','VG','VO') THEN 1
ELSE NULL
END) AS PLCC_TXN,
(CASE 
WHEN T1.BRAND = 'GP' THEN 1
ELSE NULL
END) AS GP_FLAG,
(CASE 
WHEN T1.BRAND = 'BR' THEN 1
ELSE NULL
END) AS BR_FLAG,
(CASE 
WHEN T1.BRAND = 'ON' THEN 1
ELSE NULL
END) AS ON_FLAG,
(CASE 
WHEN T1.BRAND = 'AT' THEN 1
ELSE NULL
END) AS AT_FLAG,
(CASE 
WHEN T1.BRAND = 'BF' THEN 1
ELSE NULL
END) AS BF_FLAG,
(CASE 
WHEN T1.BRAND = 'GO' THEN 1
ELSE NULL
END) AS GO_FLAG
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2 T1
INNER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2;	




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
STORED AS ORC 
AS SELECT       
T1.*, T2.STYLE_COLOR_CD,
(
CASE 
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACCESSORIES') > 0 THEN 'ACC'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MEN') > 0 THEN 'MENS'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'SHOE') > 0 THEN 'SHOES'
WHEN T1.BRAND = 'BR' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'PETITE') > 0 THEN 'PET'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACCESS') > 0 THEN 'ACC'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BABY') > 0 THEN 'BABY'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BODY') > 0 THEN 'BODY'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BOY') > 0 THEN 'BOYS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GAP1969') > 0 THEN 'GAP1969'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MEN') > 0 THEN 'MENS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GIRL') > 0 THEN 'GIRLS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'KID') > 0 THEN 'KIDS'
WHEN T1.BRAND = 'GP' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MATERNITY') > 0 THEN 'MAT'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACCESS') > 0 THEN 'ACC'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'ACESS') >0 THEN 'ACC'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BABY') > 0 THEN 'BABY'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'BOY') > 0 THEN 'BOYS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'PLUS') > 0 THEN 'PLUSSZ'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'WOMEN') > 0 THEN 'WOMENS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'PETITE') > 0 THEN 'PET'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MEN') > 0 THEN 'MENS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'GIRL') > 0 THEN 'GIRLS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'KID') > 0 THEN 'KIDS'
WHEN T1.BRAND = 'ON' AND INSTR(UPPER(T2.MDSE_DIV_DESC), 'MATERNITY') > 0 THEN 'MAT'
ELSE 'MISC'
END 
) AS MDSE_DIV_DESC
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3 T1
LEFT OUTER JOIN
(
SELECT DISTINCT
PRODUCT_KEY, STYLE_COLOR_CD, MDSE_DIV_DESC
FROM
MDS_NEW.ODS_PRODUCT_T
) T2
ON
T1.PRODUCT_KEY = T2.PRODUCT_KEY
;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1 
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS,
SUM(DISCOUNT_AMT*FLAG_6MO) AS DISCOUNT_AMT_6MO_SLS, 
SUM(DISCOUNT_AMT*FLAG_12MO) AS DISCOUNT_AMT_12MO_SLS, 
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_6MO),0)AS NET_MARGIN_6MO_SLS,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_12MO),0)AS NET_MARGIN_12MO_SLS,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_RTL,
SUM(DISCOUNT_AMT*FLAG_6MO) AS DISCOUNT_AMT_6MO_SLS_RTL, 
SUM(DISCOUNT_AMT*FLAG_12MO) AS DISCOUNT_AMT_12MO_SLS_RTL, 
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_6MO),0)AS NET_MARGIN_6MO_SLS_RTL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_12MO),0)AS NET_MARGIN_12MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_RTL,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO)) AS NUM_TXNS_6MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO)) AS NUM_TXNS_12MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*PLCC_TXN)) AS NUM_TXNS_PLCC_6MO_SLS_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*PLCC_TXN)) AS NUM_TXNS_PLCC_12MO_SLS_RTL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_RTL = 1
GROUP BY CUSTOMER_KEY;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_ONL,
SUM(DISCOUNT_AMT*FLAG_6MO) AS DISCOUNT_AMT_6MO_SLS_ONL, 
SUM(DISCOUNT_AMT*FLAG_12MO) AS DISCOUNT_AMT_12MO_SLS_ONL, 
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_6MO),0)AS NET_MARGIN_6MO_SLS_ONL,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) - NVL(SUM(TOT_PRD_CST_AMT*FLAG_12MO),0)AS NET_MARGIN_12MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_ONL,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS_ONL,
COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS_ONL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_ONL = 1
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0)) AS NET_SALES_AMT_6MO_RTN,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0)) AS NET_SALES_AMT_12MO_RTN,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_RTL),0)) AS NET_SALES_AMT_6MO_RTN_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_RTL),0)) AS NET_SALES_AMT_12MO_RTN_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_ONL),0)) AS NET_SALES_AMT_6MO_RTN_ONL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_ONL),0)) AS NET_SALES_AMT_12MO_RTN_ONL,
-(SUM(ITEM_QTY*FLAG_6MO)) AS ITEM_QTY_6MO_RTN,
-(SUM(ITEM_QTY*FLAG_12MO)) AS ITEM_QTY_12MO_RTN,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_RTL)) AS ITEM_QTY_6MO_RTN_RTL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_RTL)) AS ITEM_QTY_12MO_RTN_RTL,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_ONL)) AS ITEM_QTY_6MO_RTN_ONL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_ONL)) AS ITEM_QTY_12MO_RTN_ONL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) AS NUM_TXNS_6MO_RTN_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) AS NUM_TXNS_12MO_RTN_RTL,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN_ONL,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN_ONL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT < 0 AND ITEM_QTY < 0
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5
STORED AS ORC  
AS SELECT
CUSTOMER_KEY,       
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_CP,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_CP,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_CP,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_CP,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL*PLCC_TXN)) + COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS_CP
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6
STORED AS ORC  
AS SELECT
CUSTOMER_KEY,       
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_RTL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_RTL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_RTL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_RTL_CP,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO)) AS NUM_TXNS_6MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO)) AS NUM_TXNS_12MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*PLCC_TXN)) AS NUM_TXNS_PLCC_6MO_SLS_RTL_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*PLCC_TXN)) AS NUM_TXNS_PLCC_12MO_SLS_RTL_CP
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_RTL = 1
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7
STORED AS ORC  
AS SELECT
CUSTOMER_KEY,       
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0) AS NET_SALES_AMT_6MO_SLS_ONL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0) AS NET_SALES_AMT_12MO_SLS_ONL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_6MO_SLS_ONL_CP,
NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*PLCC_TXN),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*PLCC_TXN),0) AS NET_SALES_AMT_PLCC_12MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_6MO) AS ITEM_QTY_6MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_12MO) AS ITEM_QTY_12MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_6MO*ONSALE_IND) AS ITEM_QTY_ONSALE_6MO_SLS_ONL_CP,
SUM(ITEM_QTY*FLAG_12MO*ONSALE_IND) AS ITEM_QTY_ONSALE_12MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_PLCC_6MO)) AS NUM_TXNS_PLCC_6MO_SLS_ONL_CP,
COUNT(DISTINCT (ORDER_NUM_PLCC_12MO)) AS NUM_TXNS_PLCC_12MO_SLS_ONL_CP
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT > 0 AND ITEM_QTY > 0 AND FLAG_ONL = 1
GROUP BY CUSTOMER_KEY;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8
STORED AS ORC 
AS SELECT 
CUSTOMER_KEY,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO),0)) AS NET_SALES_AMT_6MO_RTN_CP,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO),0)) AS NET_SALES_AMT_12MO_RTN_CP,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_RTL),0)) AS NET_SALES_AMT_6MO_RTN_CP_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_RTL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_RTL),0)) AS NET_SALES_AMT_12MO_RTN_CP_RTL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_6MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_6MO*FLAG_ONL),0)) AS NET_SALES_AMT_6MO_RTN_CP_ONL,
-(NVL(SUM(GROSS_SALES_AMT*FLAG_12MO*FLAG_ONL),0) + NVL(SUM(DISCOUNT_AMT*FLAG_12MO*FLAG_ONL),0)) AS NET_SALES_AMT_12MO_RTN_CP_ONL,
-(SUM(ITEM_QTY*FLAG_6MO)) AS ITEM_QTY_6MO_RTN_CP,
-(SUM(ITEM_QTY*FLAG_12MO)) AS ITEM_QTY_12MO_RTN_CP,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_RTL)) AS ITEM_QTY_6MO_RTN_CP_RTL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_RTL)) AS ITEM_QTY_12MO_RTN_CP_RTL,
-(SUM(ITEM_QTY*FLAG_6MO*FLAG_ONL)) AS ITEM_QTY_6MO_RTN_CP_ONL,
-(SUM(ITEM_QTY*FLAG_12MO*FLAG_ONL)) AS ITEM_QTY_12MO_RTN_CP_ONL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) +  COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN_CP,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_6MO*FLAG_RTL)) AS NUM_TXNS_6MO_RTN_CP_RTL,
COUNT(DISTINCT (TRANSACTION_NUM*FLAG_12MO*FLAG_RTL)) AS NUM_TXNS_12MO_RTN_CP_RTL,
COUNT(DISTINCT (ORDER_NUM_6MO)) AS NUM_TXNS_6MO_RTN_CP_ONL,
COUNT(DISTINCT (ORDER_NUM_12MO)) AS NUM_TXNS_12MO_RTN_CP_ONL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND!='${hiveconf:CURRENT_BRAND}' AND GROSS_SALES_AMT < 0 AND ITEM_QTY < 0
GROUP BY CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1 
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY,
T1.DIV_SHP,
T2.DIV_SHP_ONL,
T3.DIV_SHP_RTL
FROM
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND = '${hiveconf:CURRENT_BRAND}'
GROUP BY CUSTOMER_KEY
) T1
LEFT OUTER JOIN
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_ONL
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_ONL = 1 AND BRAND = '${hiveconf:CURRENT_BRAND}'
GROUP BY CUSTOMER_KEY
) T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN 
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_RTL
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_RTL = 1 AND BRAND = '${hiveconf:CURRENT_BRAND}'
GROUP BY CUSTOMER_KEY
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY,
T1.DIV_SHP_CP,
T2.DIV_SHP_CP_ONL,
T3.DIV_SHP_CP_RTL
FROM
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_CP
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE BRAND != '${hiveconf:CURRENT_BRAND}'
GROUP BY CUSTOMER_KEY
) T1
LEFT OUTER JOIN
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_CP_ONL
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_ONL = 1 AND BRAND != '${hiveconf:CURRENT_BRAND}'
GROUP BY CUSTOMER_KEY
) T2
ON
T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN 
(
SELECT CUSTOMER_KEY, COUNT(DISTINCT MDSE_DIV_DESC) AS DIV_SHP_CP_RTL
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4
WHERE FLAG_RTL = 1 AND BRAND != '${hiveconf:CURRENT_BRAND}'
GROUP BY CUSTOMER_KEY
) T3
ON
T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP
STORED AS ORC 
AS SELECT 
T0.CUSTOMER_KEY,
T1.DIV_SHP,
T1.DIV_SHP_ONL,
T1.DIV_SHP_RTL,
T2.DIV_SHP_CP,
T2.DIV_SHP_CP_ONL,
T2.DIV_SHP_CP_RTL
FROM
(
SELECT DISTINCT CUSTOMER_KEY FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM
) T0
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1 T1
ON
T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2 T2
ON
T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR 
STORED AS ORC 
AS SELECT 
T3.CUSTOMER_KEY, 
DATEDIFF(T2.MAXDATE, T3.LAST_PUR_DT_CP) AS DAYS_LAST_PUR_CP,
DATEDIFF(T2.MAXDATE, T3.LAST_PUR_DT_CP_RTL) AS DAYS_LAST_PUR_CP_RTL,
DATEDIFF(T2.MAXDATE, T3.LAST_PUR_DT_CP_ONL) AS DAYS_LAST_PUR_CP_ONL,
DATEDIFF(T2.MAXDATE, T4.LAST_PUR_DT) AS DAYS_LAST_PUR,
DATEDIFF(T2.MAXDATE, T4.LAST_PUR_DT_RTL) AS DAYS_LAST_PUR_RTL,
DATEDIFF(T2.MAXDATE, T4.LAST_PUR_DT_ONL) AS DAYS_LAST_PUR_ONL
FROM
( 
SELECT 
T1.CUSTOMER_KEY, 
TO_DATE(MAX(T1.ORDER_DATE)) AS LAST_PUR_DT_CP,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_RTL))) AS LAST_PUR_DT_CP_RTL,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_ONL))) AS LAST_PUR_DT_CP_ONL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4 T1 
WHERE 
T1.GROSS_SALES_AMT > 0  AND T1.ITEM_QTY > 0 AND
T1.BRAND != '${hiveconf:CURRENT_BRAND}'
GROUP BY T1.CUSTOMER_KEY
) T3
LEFT OUTER JOIN
(
SELECT T1.CUSTOMER_KEY, 
TO_DATE(MAX(T1.ORDER_DATE)) AS LAST_PUR_DT,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_RTL))) AS LAST_PUR_DT_RTL,
TO_DATE(FROM_UNIXTIME(MAX(UNIX_TIMESTAMP(T1.ORDER_DATE, 'yyyy-MM-dd') * T1.FLAG_ONL))) AS LAST_PUR_DT_ONL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_4 T1
WHERE 
GROSS_SALES_AMT > 0  AND ITEM_QTY > 0 AND
${hiveconf:CURRENT_BRAND}_FLAG=1
GROUP BY T1.CUSTOMER_KEY
) T4
ON
T3.CUSTOMER_KEY = T4.CUSTOMER_KEY
INNER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2
;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS 
STORED AS ORC 
AS SELECT 
T4.CUSTOMER_KEY,
DATEDIFF(T6.MAXDATE, T4.ACQUISITION_DATE_CP) AS DAYS_ON_BOOKS_CP,
DATEDIFF(T6.MAXDATE, T4.ACQUISITION_DATE) AS DAYS_ON_BOOKS
FROM
(
SELECT DISTINCT
T1.CUSTOMER_KEY,
T2.ACQUISITION_DATE_CP,
T3.ACQUISITION_DATE
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN
(
SELECT 
T0.CUST_KEY AS CUSTOMER_KEY,
TO_DATE(MIN(T0.ACQUISITION_DATE)) AS ACQUISITION_DATE_CP
FROM MDS_NEW.ODS_BRAND_CUSTOMER_T T0
INNER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T5
WHERE
T0.BRAND != '${hiveconf:CURRENT_BRAND}' AND
TO_DATE(T0.ACQUISITION_DATE) <= T5.MAXDATE
GROUP BY T0.CUST_KEY
) T2
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN
(
SELECT 
T0.CUST_KEY AS CUSTOMER_KEY,
TO_DATE(MIN(T0.ACQUISITION_DATE)) AS ACQUISITION_DATE
FROM MDS_NEW.ODS_BRAND_CUSTOMER_T T0
INNER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T5
WHERE
T0.BRAND = '${hiveconf:CURRENT_BRAND}' AND
TO_DATE(T0.ACQUISITION_DATE) <= T5.MAXDATE
GROUP BY T0.CUST_KEY
) T3
ON T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
) T4
INNER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T6
;





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY, COUNT(DISTINCT T3.CAMPAIGN_VERSION) AS EMAILS_CLICKED
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN
(
SELECT DISTINCT CUSTOMER_KEY, CAMPAIGN_VERSION, CELL_KEY, URL_KEY, CLICK_DATE, COUNTRY, BRAND
FROM
MDS_NEW.ODS_EMAILCLICKS_T
) T3
ON T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CELL_T T4
ON T3.CELL_KEY = T4.CELL_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CAMPAIGN_T T5
ON T4.CAMPAIGN_ID = T5.CAMPAIGN_ID
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2
WHERE
UNIX_TIMESTAMP(TO_DATE(T3.CLICK_DATE), 'yyyy-MM-dd') BETWEEN
UNIX_TIMESTAMP(T2.MINDATE, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T2.MAXDATE, 'yyyy-MM-dd') AND
T3.COUNTRY='${hiveconf:CURRENT_COUNTRY}' AND 
T3.BRAND='${hiveconf:CURRENT_BRAND}' AND 
T5.CAMPAIGN_OBJECTIVE != 'T'
GROUP BY T1.CUSTOMER_KEY;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY, COUNT(DISTINCT T3.CAMPAIGN_VERSION) AS EMAILS_CLICKED_CP
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN
(
SELECT DISTINCT CUSTOMER_KEY, CAMPAIGN_VERSION, CELL_KEY, URL_KEY, CLICK_DATE, COUNTRY, BRAND
FROM
MDS_NEW.ODS_EMAILCLICKS_T
) T3
ON T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CELL_T T4
ON T3.CELL_KEY = T4.CELL_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CAMPAIGN_T T5
ON T4.CAMPAIGN_ID = T5.CAMPAIGN_ID
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2
WHERE
UNIX_TIMESTAMP(TO_DATE(T3.CLICK_DATE), 'yyyy-MM-dd') BETWEEN
UNIX_TIMESTAMP(T2.MINDATE, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T2.MAXDATE, 'yyyy-MM-dd') AND
T3.COUNTRY='${hiveconf:CURRENT_COUNTRY}' AND 
T3.BRAND!='${hiveconf:CURRENT_BRAND}' AND 
T5.CAMPAIGN_OBJECTIVE != 'T'
GROUP BY T1.CUSTOMER_KEY;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILCLICKS;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILCLICKS
STORED AS ORC 
AS SELECT 
T2.CUSTOMER_KEY, T1.EMAILS_CLICKED, T2.EMAILS_CLICKED_CP
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2 T2
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1 T1
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2;







DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY, COUNT(DISTINCT T3.CAMPAIGN_VERSION) AS EMAILS_OPENED
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN
(
SELECT DISTINCT CUSTOMER_KEY, CAMPAIGN_VERSION, CELL_KEY, EVENT_DATE, COUNTRY, BRAND
FROM
MDS_NEW.ODS_EMAILOPENS_T
) T3
ON T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CELL_T T4
ON T3.CELL_KEY = T4.CELL_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CAMPAIGN_T T5
ON T4.CAMPAIGN_ID = T5.CAMPAIGN_ID
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2
WHERE
UNIX_TIMESTAMP(TO_DATE(T3.EVENT_DATE), 'yyyy-MM-dd') BETWEEN
UNIX_TIMESTAMP(T2.MINDATE, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T2.MAXDATE, 'yyyy-MM-dd') AND
T3.COUNTRY='${hiveconf:CURRENT_COUNTRY}' AND 
T3.BRAND='${hiveconf:CURRENT_BRAND}' AND 
T5.CAMPAIGN_OBJECTIVE != 'T'
GROUP BY T1.CUSTOMER_KEY;






DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2
STORED AS ORC 
AS SELECT 
T1.CUSTOMER_KEY, COUNT(DISTINCT T3.CAMPAIGN_VERSION) AS EMAILS_OPENED_CP
FROM 
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN
(
SELECT DISTINCT CUSTOMER_KEY, CAMPAIGN_VERSION, CELL_KEY, EVENT_DATE, COUNTRY, BRAND
FROM
MDS_NEW.ODS_EMAILOPENS_T
) T3
ON T1.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CELL_T T4
ON T3.CELL_KEY = T4.CELL_KEY
LEFT OUTER JOIN
MDS_NEW.ODS_CAMPAIGN_T T5
ON T4.CAMPAIGN_ID = T5.CAMPAIGN_ID
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DATERANGE T2
WHERE
UNIX_TIMESTAMP(TO_DATE(T3.EVENT_DATE), 'yyyy-MM-dd') BETWEEN
UNIX_TIMESTAMP(T2.MINDATE, 'yyyy-MM-dd') AND UNIX_TIMESTAMP(T2.MAXDATE, 'yyyy-MM-dd') AND
T3.COUNTRY='${hiveconf:CURRENT_COUNTRY}' AND 
T3.BRAND!='${hiveconf:CURRENT_BRAND}' AND 
T5.CAMPAIGN_OBJECTIVE != 'T'
GROUP BY T1.CUSTOMER_KEY;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILOPENS;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILOPENS
STORED AS ORC 
AS SELECT 
T2.CUSTOMER_KEY, T1.EMAILS_OPENED, T2.EMAILS_OPENED_CP
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2 T2
LEFT OUTER JOIN
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1 T1
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST1;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TEST2;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1 
STORED AS ORC
AS SELECT
T1.CUSTOMER_KEY, T3.START_DT, T3.END_DT, T2.OPEN_DATE, 
T2.REISSUE_DATE, T2.BRAND, T2.PLATE_CODE,
T2.PLCC_DROPPED, T2.EST_CLOSED_DT, T2.CARD_TYP
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN 
MDS_NEW.ODS_PLCC_CARDHOLDER_T T2
ON T1.CUSTOMER_KEY = T2.CUSTOMER_KEY
INNER JOIN
(
SELECT DISTINCT
TO_DATE(EVENT_DATE) AS START_DT, 
DATE_ADD(TO_DATE(EVENT_DATE), 1) AS END_DT 
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED
) T3
WHERE 
TO_DATE(T2.OPEN_DATE) <= T3.START_DT AND 
(
TO_DATE(EST_CLOSED_DT) IS NULL OR 
TO_DATE(EST_CLOSED_DT) >= T3.START_DT
);


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2 
STORED AS ORC
AS SELECT
T1.CUSTOMER_KEY, T1.START_DT, T1.END_DT, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP,
MAX(T1.OPEN_DATE) AS OPEN_DATE, MAX(T1.REISSUE_DATE) AS REISSUE_DATE, MAX(T1.EST_CLOSED_DT) AS EST_CLOSED_DT
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1 T1 
GROUP BY T1.CUSTOMER_KEY, T1.START_DT, T1.END_DT, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3 
STORED AS ORC
AS SELECT
T1.CUSTOMER_KEY, T1.START_DT, T1.END_DT, T1.BRAND, T1.PLATE_CODE, T1.CARD_TYP,  
T1.OPEN_DATE, T1.REISSUE_DATE,  T1.EST_CLOSED_DT,
(CASE WHEN BRAND='${hiveconf:CURRENT_BRAND}' AND PLATE_CODE>4 THEN 1 ELSE 0 END) VISASIG_FLAG,
(CASE WHEN BRAND='${hiveconf:CURRENT_BRAND}' AND PLATE_CODE<4 THEN 1 ELSE 0 END) BASIC_FLAG,
(CASE WHEN BRAND='${hiveconf:CURRENT_BRAND}' AND PLATE_CODE=4 THEN 1 ELSE 0 END) SILVER_FLAG,
(CASE WHEN BRAND<>'${hiveconf:CURRENT_BRAND}' THEN 1 ELSE 0 END) SISTER_FLAG
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2 T1;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4;             
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4 AS SELECT
CUSTOMER_KEY, 
MAX(VISASIG_FLAG) AS VISASIG_FLAG,
MAX(BASIC_FLAG) AS BASIC_FLAG,
MAX(SISTER_FLAG) AS SISTER_FLAG,
MAX(SILVER_FLAG) AS SILVER_FLAG
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3
GROUP BY CUSTOMER_KEY;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5; 
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5 AS SELECT
T1.CUSTOMER_KEY, T2.VISASIG_FLAG, T2.BASIC_FLAG, T2.SILVER_FLAG, T2.SISTER_FLAG
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T1
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4 T2
ON T1.CUSTOMER_KEY=T2.CUSTOMER_KEY;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS;  
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS AS SELECT
CUSTOMER_KEY, VISASIG_FLAG, BASIC_FLAG, SILVER_FLAG, SISTER_FLAG,
(
CASE 
WHEN VISASIG_FLAG = 1 THEN 1
WHEN SILVER_FLAG = 1 AND VISASIG_FLAG <> 1 THEN 2
WHEN BASIC_FLAG = 1 AND SILVER_FLAG <> 1 AND VISASIG_FLAG <> 1 THEN 3
WHEN SISTER_FLAG = 1 AND SILVER_FLAG <> 1 AND BASIC_FLAG <> 1 AND VISASIG_FLAG <> 1 THEN 4
ELSE 5
END
) AS CARD_STATUS
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5;


DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_1;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_2;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_3;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_4;
DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS_5; 





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1
STORED AS ORC 
AS SELECT
T0.*,
T1.NET_SALES_AMT_6MO_SLS,
T1.NET_SALES_AMT_12MO_SLS,
T1.NET_SALES_AMT_PLCC_6MO_SLS,
T1.NET_SALES_AMT_PLCC_12MO_SLS,
T1.DISCOUNT_AMT_6MO_SLS,
T1.DISCOUNT_AMT_12MO_SLS,
T1.NET_MARGIN_6MO_SLS,
T1.NET_MARGIN_12MO_SLS,
T1.ITEM_QTY_6MO_SLS,
T1.ITEM_QTY_12MO_SLS,
T1.ITEM_QTY_ONSALE_6MO_SLS,
T1.ITEM_QTY_ONSALE_12MO_SLS,
T1.NUM_TXNS_6MO_SLS,
T1.NUM_TXNS_12MO_SLS,
T1.NUM_TXNS_PLCC_6MO_SLS,
T1.NUM_TXNS_PLCC_12MO_SLS,
T2.NET_SALES_AMT_6MO_SLS_RTL,
T2.NET_SALES_AMT_12MO_SLS_RTL,
T2.NET_SALES_AMT_PLCC_6MO_SLS_RTL,
T2.NET_SALES_AMT_PLCC_12MO_SLS_RTL,
T2.DISCOUNT_AMT_6MO_SLS_RTL,
T2.DISCOUNT_AMT_12MO_SLS_RTL,
T2.NET_MARGIN_6MO_SLS_RTL,
T2.NET_MARGIN_12MO_SLS_RTL,
T2.ITEM_QTY_6MO_SLS_RTL,
T2.ITEM_QTY_12MO_SLS_RTL,
T2.ITEM_QTY_ONSALE_6MO_SLS_RTL,
T2.ITEM_QTY_ONSALE_12MO_SLS_RTL,
T2.NUM_TXNS_6MO_SLS_RTL,
T2.NUM_TXNS_12MO_SLS_RTL,
T2.NUM_TXNS_PLCC_6MO_SLS_RTL,
T2.NUM_TXNS_PLCC_12MO_SLS_RTL,
T3.NET_SALES_AMT_6MO_SLS_ONL,
T3.NET_SALES_AMT_12MO_SLS_ONL,
T3.NET_SALES_AMT_PLCC_6MO_SLS_ONL,
T3.NET_SALES_AMT_PLCC_12MO_SLS_ONL,
T3.DISCOUNT_AMT_6MO_SLS_ONL,
T3.DISCOUNT_AMT_12MO_SLS_ONL,
T3.NET_MARGIN_6MO_SLS_ONL,
T3.NET_MARGIN_12MO_SLS_ONL,
T3.ITEM_QTY_6MO_SLS_ONL,
T3.ITEM_QTY_12MO_SLS_ONL,
T3.ITEM_QTY_ONSALE_6MO_SLS_ONL,
T3.ITEM_QTY_ONSALE_12MO_SLS_ONL,
T3.NUM_TXNS_6MO_SLS_ONL,
T3.NUM_TXNS_12MO_SLS_ONL,
T3.NUM_TXNS_PLCC_6MO_SLS_ONL,
T3.NUM_TXNS_PLCC_12MO_SLS_ONL,
T4.NET_SALES_AMT_6MO_RTN,
T4.NET_SALES_AMT_12MO_RTN,
T4.NET_SALES_AMT_6MO_RTN_RTL,
T4.NET_SALES_AMT_12MO_RTN_RTL,
T4.NET_SALES_AMT_6MO_RTN_ONL,
T4.NET_SALES_AMT_12MO_RTN_ONL,
T4.ITEM_QTY_6MO_RTN,
T4.ITEM_QTY_12MO_RTN,
T4.ITEM_QTY_6MO_RTN_RTL,
T4.ITEM_QTY_12MO_RTN_RTL,
T4.ITEM_QTY_6MO_RTN_ONL,
T4.ITEM_QTY_12MO_RTN_ONL,
T4.NUM_TXNS_6MO_RTN,
T4.NUM_TXNS_12MO_RTN,
T4.NUM_TXNS_6MO_RTN_RTL,
T4.NUM_TXNS_12MO_RTN_RTL,
T4.NUM_TXNS_6MO_RTN_ONL,
T4.NUM_TXNS_12MO_RTN_ONL
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EM T0
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1 T1
ON T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2 T2
ON T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3 T3
ON T0.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4 T4 
ON T0.CUSTOMER_KEY = T4.CUSTOMER_KEY
;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2 
STORED AS ORC
AS SELECT
T0.*,
T1.NET_SALES_AMT_6MO_SLS_CP,
T1.NET_SALES_AMT_12MO_SLS_CP,
T1.NET_SALES_AMT_PLCC_6MO_SLS_CP,
T1.NET_SALES_AMT_PLCC_12MO_SLS_CP,
T1.ITEM_QTY_6MO_SLS_CP,
T1.ITEM_QTY_12MO_SLS_CP,
T1.ITEM_QTY_ONSALE_6MO_SLS_CP,
T1.ITEM_QTY_ONSALE_12MO_SLS_CP,
T1.NUM_TXNS_6MO_SLS_CP,
T1.NUM_TXNS_12MO_SLS_CP,
T1.NUM_TXNS_PLCC_6MO_SLS_CP,
T1.NUM_TXNS_PLCC_12MO_SLS_CP,
T2.NET_SALES_AMT_6MO_SLS_RTL_CP,
T2.NET_SALES_AMT_12MO_SLS_RTL_CP,
T2.NET_SALES_AMT_PLCC_6MO_SLS_RTL_CP,
T2.NET_SALES_AMT_PLCC_12MO_SLS_RTL_CP,
T2.ITEM_QTY_6MO_SLS_RTL_CP,
T2.ITEM_QTY_12MO_SLS_RTL_CP,
T2.ITEM_QTY_ONSALE_6MO_SLS_RTL_CP,
T2.ITEM_QTY_ONSALE_12MO_SLS_RTL_CP,
T2.NUM_TXNS_6MO_SLS_RTL_CP,
T2.NUM_TXNS_12MO_SLS_RTL_CP,
T2.NUM_TXNS_PLCC_6MO_SLS_RTL_CP,
T2.NUM_TXNS_PLCC_12MO_SLS_RTL_CP,
T3.NET_SALES_AMT_6MO_SLS_ONL_CP,
T3.NET_SALES_AMT_12MO_SLS_ONL_CP,
T3.NET_SALES_AMT_PLCC_6MO_SLS_ONL_CP,
T3.NET_SALES_AMT_PLCC_12MO_SLS_ONL_CP,
T3.ITEM_QTY_6MO_SLS_ONL_CP,
T3.ITEM_QTY_12MO_SLS_ONL_CP,
T3.ITEM_QTY_ONSALE_6MO_SLS_ONL_CP,
T3.ITEM_QTY_ONSALE_12MO_SLS_ONL_CP,
T3.NUM_TXNS_6MO_SLS_ONL_CP,
T3.NUM_TXNS_12MO_SLS_ONL_CP,
T3.NUM_TXNS_PLCC_6MO_SLS_ONL_CP,
T3.NUM_TXNS_PLCC_12MO_SLS_ONL_CP,
T4.NET_SALES_AMT_6MO_RTN_CP,
T4.NET_SALES_AMT_12MO_RTN_CP,
T4.NET_SALES_AMT_6MO_RTN_CP_RTL,
T4.NET_SALES_AMT_12MO_RTN_CP_RTL,
T4.NET_SALES_AMT_6MO_RTN_CP_ONL,
T4.NET_SALES_AMT_12MO_RTN_CP_ONL,
T4.ITEM_QTY_6MO_RTN_CP,
T4.ITEM_QTY_12MO_RTN_CP,
T4.ITEM_QTY_6MO_RTN_CP_RTL,
T4.ITEM_QTY_12MO_RTN_CP_RTL,
T4.ITEM_QTY_6MO_RTN_CP_ONL,
T4.ITEM_QTY_12MO_RTN_CP_ONL,
T4.NUM_TXNS_6MO_RTN_CP,
T4.NUM_TXNS_12MO_RTN_CP,
T4.NUM_TXNS_6MO_RTN_CP_RTL,
T4.NUM_TXNS_12MO_RTN_CP_RTL,
T4.NUM_TXNS_6MO_RTN_CP_ONL,
T4.NUM_TXNS_12MO_RTN_CP_ONL
FROM
${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1 T0
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5 T1 
ON T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6 T2
ON T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7 T3
ON T0.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8 T4
ON T0.CUSTOMER_KEY = T4.CUSTOMER_KEY
;



DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED;
CREATE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED AS
SELECT
T0.*,
T1.VISASIG_FLAG, 
T1.BASIC_FLAG,
T1.SILVER_FLAG,
T1.SISTER_FLAG,
T1.CARD_STATUS,
T2.DAYS_LAST_PUR,
T2.DAYS_LAST_PUR_ONL,
T2.DAYS_LAST_PUR_RTL,
T2.DAYS_LAST_PUR_CP,
T2.DAYS_LAST_PUR_CP_ONL,
T2.DAYS_LAST_PUR_CP_RTL,
T3.DAYS_ON_BOOKS, 
T3.DAYS_ON_BOOKS_CP,
T4.DIV_SHP,
T4.DIV_SHP_ONL,
T4.DIV_SHP_RTL,
T4.DIV_SHP_CP,
T4.DIV_SHP_CP_ONL,
T4.DIV_SHP_CP_RTL,
T5.EMAILS_CLICKED, 
T5.EMAILS_CLICKED_CP,
T6.EMAILS_OPENED, 
T6.EMAILS_OPENED_CP,
T7.START_DT, 
T7.END_DT
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2 T0
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS T1
ON T0.CUSTOMER_KEY = T1.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR T2
ON T0.CUSTOMER_KEY = T2.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS T3
ON T0.CUSTOMER_KEY = T3.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP T4
ON T0.CUSTOMER_KEY = T4.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILCLICKS T5
ON T0.CUSTOMER_KEY = T5.CUSTOMER_KEY
LEFT OUTER JOIN ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILOPENS T6
ON T0.CUSTOMER_KEY = T6.CUSTOMER_KEY
INNER JOIN
(
SELECT DISTINCT
TO_DATE(EVENT_DATE) AS START_DT, 
DATE_ADD(TO_DATE(EVENT_DATE), 1) AS END_DT 
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_MAILED
) T7
;




DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_ONL_TXT;
CREATE EXTERNAL TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_ONL_TXT
(
CAMPAIGN_VERSION BIGINT,
CUSTOMER_KEY BIGINT,
EVENT_DATE STRING,
EMAILOPENFLAG INT,
EMAILCLICKFLAG INT,
ONL_RESPONDER INT,
NUM_TXNS_ONL BIGINT,
ITEM_QTY_ONL BIGINT,
GROSS_SALES_AMT_ONL DOUBLE,
DISCOUNT_AMT_ONL DOUBLE,
TOT_PRD_CST_AMT_ONL DOUBLE,
NET_SALES_AMT_ONL DOUBLE,
NET_MARGIN_ONL DOUBLE,
NET_SALES_AMT_6MO_SLS_ONL DOUBLE,
NET_SALES_AMT_12MO_SLS_ONL DOUBLE,
NET_SALES_AMT_PLCC_6MO_SLS_ONL DOUBLE,
NET_SALES_AMT_PLCC_12MO_SLS_ONL DOUBLE,
DISCOUNT_AMT_6MO_SLS_ONL DOUBLE,
DISCOUNT_AMT_12MO_SLS_ONL DOUBLE,
NET_MARGIN_6MO_SLS_ONL DOUBLE,
NET_MARGIN_12MO_SLS_ONL DOUBLE,
ITEM_QTY_6MO_SLS_ONL BIGINT,
ITEM_QTY_12MO_SLS_ONL BIGINT,
ITEM_QTY_ONSALE_6MO_SLS_ONL BIGINT,
ITEM_QTY_ONSALE_12MO_SLS_ONL BIGINT,
NUM_TXNS_6MO_SLS_ONL BIGINT,
NUM_TXNS_12MO_SLS_ONL BIGINT,
NUM_TXNS_PLCC_6MO_SLS_ONL BIGINT,
NUM_TXNS_PLCC_12MO_SLS_ONL BIGINT,
NET_SALES_AMT_6MO_RTN_ONL DOUBLE,
NET_SALES_AMT_12MO_RTN_ONL DOUBLE,
ITEM_QTY_6MO_RTN_ONL BIGINT,
ITEM_QTY_12MO_RTN_ONL BIGINT,
NUM_TXNS_6MO_RTN_ONL BIGINT,
NUM_TXNS_12MO_RTN_ONL BIGINT,
NET_SALES_AMT_6MO_SLS_ONL_CP DOUBLE,
NET_SALES_AMT_12MO_SLS_ONL_CP DOUBLE,
NET_SALES_AMT_PLCC_6MO_SLS_ONL_CP DOUBLE,
NET_SALES_AMT_PLCC_12MO_SLS_ONL_CP DOUBLE,
ITEM_QTY_6MO_SLS_ONL_CP BIGINT,
ITEM_QTY_12MO_SLS_ONL_CP BIGINT,
ITEM_QTY_ONSALE_6MO_SLS_ONL_CP BIGINT,
ITEM_QTY_ONSALE_12MO_SLS_ONL_CP BIGINT,
NUM_TXNS_6MO_SLS_ONL_CP BIGINT,
NUM_TXNS_12MO_SLS_ONL_CP BIGINT,
NUM_TXNS_PLCC_6MO_SLS_ONL_CP BIGINT,
NUM_TXNS_PLCC_12MO_SLS_ONL_CP BIGINT,
NET_SALES_AMT_6MO_RTN_CP_ONL DOUBLE,
NET_SALES_AMT_12MO_RTN_CP_ONL DOUBLE,
ITEM_QTY_6MO_RTN_CP_ONL BIGINT,
ITEM_QTY_12MO_RTN_CP_ONL BIGINT,
NUM_TXNS_6MO_RTN_CP_ONL BIGINT,
NUM_TXNS_12MO_RTN_CP_ONL BIGINT,
VISASIG_FLAG INT,
BASIC_FLAG INT,
SILVER_FLAG INT,
SISTER_FLAG INT,
CARD_STATUS INT,
DAYS_LAST_PUR_ONL INT,
DAYS_LAST_PUR_CP_ONL INT,
DAYS_ON_BOOKS INT,
DAYS_ON_BOOKS_CP INT,
DIV_SHP_ONL BIGINT,
DIV_SHP_CP_ONL BIGINT,
EMAILS_CLICKED BIGINT,
EMAILS_CLICKED_CP BIGINT,
EMAILS_OPENED BIGINT,
EMAILS_OPENED_CP BIGINT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
LOCATION '/user/xtghosh/${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_ONL.TXT'
TBLPROPERTIES ('serialization.null.format' = '')
;



INSERT OVERWRITE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_ONL_TXT
SELECT 
CAMPAIGN_VERSION,
CUSTOMER_KEY,
EVENT_DATE,
COALESCE(EMAILOPENFLAG, 0),
COALESCE(EMAILCLICKFLAG, 0),
COALESCE(ONL_RESPONDER, 0),
COALESCE(NUM_TXNS_ONL, 0),
COALESCE(ITEM_QTY_ONL, 0),
COALESCE(GROSS_SALES_AMT_ONL, 0),
COALESCE(DISCOUNT_AMT_ONL, 0),
COALESCE(TOT_PRD_CST_AMT_ONL, 0),
COALESCE(NET_SALES_AMT_ONL, 0),
COALESCE(NET_MARGIN_ONL, 0),
COALESCE(NET_SALES_AMT_6MO_SLS_ONL, 0),
COALESCE(NET_SALES_AMT_12MO_SLS_ONL, 0),
COALESCE(NET_SALES_AMT_PLCC_6MO_SLS_ONL, 0),
COALESCE(NET_SALES_AMT_PLCC_12MO_SLS_ONL, 0),
COALESCE(DISCOUNT_AMT_6MO_SLS_ONL, 0),
COALESCE(DISCOUNT_AMT_12MO_SLS_ONL, 0),
COALESCE(NET_MARGIN_6MO_SLS_ONL, 0),
COALESCE(NET_MARGIN_12MO_SLS_ONL, 0),
COALESCE(ITEM_QTY_6MO_SLS_ONL, 0),
COALESCE(ITEM_QTY_12MO_SLS_ONL, 0),
COALESCE(ITEM_QTY_ONSALE_6MO_SLS_ONL, 0),
COALESCE(ITEM_QTY_ONSALE_12MO_SLS_ONL, 0),
COALESCE(NUM_TXNS_6MO_SLS_ONL, 0),
COALESCE(NUM_TXNS_12MO_SLS_ONL, 0),
COALESCE(NUM_TXNS_PLCC_6MO_SLS_ONL, 0),
COALESCE(NUM_TXNS_PLCC_12MO_SLS_ONL, 0),
COALESCE(NET_SALES_AMT_6MO_RTN_ONL, 0),
COALESCE(NET_SALES_AMT_12MO_RTN_ONL, 0),
COALESCE(ITEM_QTY_6MO_RTN_ONL, 0),
COALESCE(ITEM_QTY_12MO_RTN_ONL, 0),
COALESCE(NUM_TXNS_6MO_RTN_ONL, 0),
COALESCE(NUM_TXNS_12MO_RTN_ONL, 0),
COALESCE(NET_SALES_AMT_6MO_SLS_ONL_CP, 0),
COALESCE(NET_SALES_AMT_12MO_SLS_ONL_CP, 0),
COALESCE(NET_SALES_AMT_PLCC_6MO_SLS_ONL_CP, 0),
COALESCE(NET_SALES_AMT_PLCC_12MO_SLS_ONL_CP, 0),
COALESCE(ITEM_QTY_6MO_SLS_ONL_CP, 0),
COALESCE(ITEM_QTY_12MO_SLS_ONL_CP, 0),
COALESCE(ITEM_QTY_ONSALE_6MO_SLS_ONL_CP, 0),
COALESCE(ITEM_QTY_ONSALE_12MO_SLS_ONL_CP, 0),
COALESCE(NUM_TXNS_6MO_SLS_ONL_CP, 0),
COALESCE(NUM_TXNS_12MO_SLS_ONL_CP, 0),
COALESCE(NUM_TXNS_PLCC_6MO_SLS_ONL_CP, 0),
COALESCE(NUM_TXNS_PLCC_12MO_SLS_ONL_CP, 0),
COALESCE(NET_SALES_AMT_6MO_RTN_CP_ONL, 0),
COALESCE(NET_SALES_AMT_12MO_RTN_CP_ONL, 0),
COALESCE(ITEM_QTY_6MO_RTN_CP_ONL, 0),
COALESCE(ITEM_QTY_12MO_RTN_CP_ONL, 0),
COALESCE(NUM_TXNS_6MO_RTN_CP_ONL, 0),
COALESCE(NUM_TXNS_12MO_RTN_CP_ONL, 0),
COALESCE(VISASIG_FLAG, 0),
COALESCE(BASIC_FLAG, 0),
COALESCE(SILVER_FLAG, 0),
COALESCE(SISTER_FLAG, 0),
COALESCE(CARD_STATUS, 0),
COALESCE(DAYS_LAST_PUR_ONL, 365),
COALESCE(DAYS_LAST_PUR_CP_ONL, 365),
COALESCE(DAYS_ON_BOOKS, 0),
COALESCE(DAYS_ON_BOOKS_CP, 0),
COALESCE(DIV_SHP_ONL, 0),
COALESCE(DIV_SHP_CP_ONL, 0),
COALESCE(EMAILS_CLICKED, 0),
COALESCE(EMAILS_CLICKED_CP, 0),
COALESCE(EMAILS_OPENED, 0),
COALESCE(EMAILS_OPENED_CP, 0)
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED T1;





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_RTL_TXT;
CREATE EXTERNAL TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_RTL_TXT
(
CAMPAIGN_VERSION BIGINT,
CUSTOMER_KEY BIGINT,
EVENT_DATE STRING,
EMAILOPENFLAG INT,
EMAILCLICKFLAG INT,
RTL_RESPONDER INT,
NUM_TXNS_RTL BIGINT,
ITEM_QTY_RTL BIGINT,
GROSS_SALES_AMT_RTL DOUBLE,
DISCOUNT_AMT_RTL DOUBLE,
TOT_PRD_CST_AMT_RTL DOUBLE,
NET_SALES_AMT_RTL DOUBLE,
NET_MARGIN_RTL DOUBLE,
NET_SALES_AMT_6MO_SLS_RTL DOUBLE,
NET_SALES_AMT_12MO_SLS_RTL DOUBLE,
NET_SALES_AMT_PLCC_6MO_SLS_RTL DOUBLE,
NET_SALES_AMT_PLCC_12MO_SLS_RTL DOUBLE,
DISCOUNT_AMT_6MO_SLS_RTL DOUBLE,
DISCOUNT_AMT_12MO_SLS_RTL DOUBLE,
NET_MARGIN_6MO_SLS_RTL DOUBLE,
NET_MARGIN_12MO_SLS_RTL DOUBLE,
ITEM_QTY_6MO_SLS_RTL BIGINT,
ITEM_QTY_12MO_SLS_RTL BIGINT,
ITEM_QTY_ONSALE_6MO_SLS_RTL BIGINT,
ITEM_QTY_ONSALE_12MO_SLS_RTL BIGINT,
NUM_TXNS_6MO_SLS_RTL BIGINT,
NUM_TXNS_12MO_SLS_RTL BIGINT,
NUM_TXNS_PLCC_6MO_SLS_RTL BIGINT,
NUM_TXNS_PLCC_12MO_SLS_RTL BIGINT,
NET_SALES_AMT_6MO_RTN_RTL DOUBLE,
NET_SALES_AMT_12MO_RTN_RTL DOUBLE,
ITEM_QTY_6MO_RTN_RTL BIGINT,
ITEM_QTY_12MO_RTN_RTL BIGINT,
NUM_TXNS_6MO_RTN_RTL BIGINT,
NUM_TXNS_12MO_RTN_RTL BIGINT,
NET_SALES_AMT_6MO_SLS_RTL_CP DOUBLE,
NET_SALES_AMT_12MO_SLS_RTL_CP DOUBLE,
NET_SALES_AMT_PLCC_6MO_SLS_RTL_CP DOUBLE,
NET_SALES_AMT_PLCC_12MO_SLS_RTL_CP DOUBLE,
ITEM_QTY_6MO_SLS_RTL_CP BIGINT,
ITEM_QTY_12MO_SLS_RTL_CP BIGINT,
ITEM_QTY_ONSALE_6MO_SLS_RTL_CP BIGINT,
ITEM_QTY_ONSALE_12MO_SLS_RTL_CP BIGINT,
NUM_TXNS_6MO_SLS_RTL_CP BIGINT,
NUM_TXNS_12MO_SLS_RTL_CP BIGINT,
NUM_TXNS_PLCC_6MO_SLS_RTL_CP BIGINT,
NUM_TXNS_PLCC_12MO_SLS_RTL_CP BIGINT,
NET_SALES_AMT_6MO_RTN_CP_RTL DOUBLE,
NET_SALES_AMT_12MO_RTN_CP_RTL DOUBLE,
ITEM_QTY_6MO_RTN_CP_RTL BIGINT,
ITEM_QTY_12MO_RTN_CP_RTL BIGINT,
NUM_TXNS_6MO_RTN_CP_RTL BIGINT,
NUM_TXNS_12MO_RTN_CP_RTL BIGINT,
VISASIG_FLAG INT,
BASIC_FLAG INT,
SILVER_FLAG INT,
SISTER_FLAG INT,
CARD_STATUS INT,
DAYS_LAST_PUR_RTL INT,
DAYS_LAST_PUR_CP_RTL INT,
DAYS_ON_BOOKS INT,
DAYS_ON_BOOKS_CP INT,
DIV_SHP_RTL BIGINT,
DIV_SHP_CP_RTL BIGINT,
EMAILS_CLICKED BIGINT,
EMAILS_CLICKED_CP BIGINT,
EMAILS_OPENED BIGINT,
EMAILS_OPENED_CP BIGINT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
LOCATION '/user/xtghosh/${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_RTL.TXT'
TBLPROPERTIES ('serialization.null.format' = '')
;



INSERT OVERWRITE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_RTL_TXT
SELECT 
CAMPAIGN_VERSION,
CUSTOMER_KEY,
EVENT_DATE,
COALESCE(EMAILOPENFLAG, 0),
COALESCE(EMAILCLICKFLAG, 0),
COALESCE(RTL_RESPONDER, 0),
COALESCE(NUM_TXNS_RTL, 0),
COALESCE(ITEM_QTY_RTL, 0),
COALESCE(GROSS_SALES_AMT_RTL, 0),
COALESCE(DISCOUNT_AMT_RTL, 0),
COALESCE(TOT_PRD_CST_AMT_RTL, 0),
COALESCE(NET_SALES_AMT_RTL, 0),
COALESCE(NET_MARGIN_RTL, 0),
COALESCE(NET_SALES_AMT_6MO_SLS_RTL, 0),
COALESCE(NET_SALES_AMT_12MO_SLS_RTL, 0),
COALESCE(NET_SALES_AMT_PLCC_6MO_SLS_RTL, 0),
COALESCE(NET_SALES_AMT_PLCC_12MO_SLS_RTL, 0),
COALESCE(DISCOUNT_AMT_6MO_SLS_RTL, 0),
COALESCE(DISCOUNT_AMT_12MO_SLS_RTL, 0),
COALESCE(NET_MARGIN_6MO_SLS_RTL, 0),
COALESCE(NET_MARGIN_12MO_SLS_RTL, 0),
COALESCE(ITEM_QTY_6MO_SLS_RTL, 0),
COALESCE(ITEM_QTY_12MO_SLS_RTL, 0),
COALESCE(ITEM_QTY_ONSALE_6MO_SLS_RTL, 0),
COALESCE(ITEM_QTY_ONSALE_12MO_SLS_RTL, 0),
COALESCE(NUM_TXNS_6MO_SLS_RTL, 0),
COALESCE(NUM_TXNS_12MO_SLS_RTL, 0),
COALESCE(NUM_TXNS_PLCC_6MO_SLS_RTL, 0),
COALESCE(NUM_TXNS_PLCC_12MO_SLS_RTL, 0),
COALESCE(NET_SALES_AMT_6MO_RTN_RTL, 0),
COALESCE(NET_SALES_AMT_12MO_RTN_RTL, 0),
COALESCE(ITEM_QTY_6MO_RTN_RTL, 0),
COALESCE(ITEM_QTY_12MO_RTN_RTL, 0),
COALESCE(NUM_TXNS_6MO_RTN_RTL, 0),
COALESCE(NUM_TXNS_12MO_RTN_RTL, 0),
COALESCE(NET_SALES_AMT_6MO_SLS_RTL_CP, 0),
COALESCE(NET_SALES_AMT_12MO_SLS_RTL_CP, 0),
COALESCE(NET_SALES_AMT_PLCC_6MO_SLS_RTL_CP, 0),
COALESCE(NET_SALES_AMT_PLCC_12MO_SLS_RTL_CP, 0),
COALESCE(ITEM_QTY_6MO_SLS_RTL_CP, 0),
COALESCE(ITEM_QTY_12MO_SLS_RTL_CP, 0),
COALESCE(ITEM_QTY_ONSALE_6MO_SLS_RTL_CP, 0),
COALESCE(ITEM_QTY_ONSALE_12MO_SLS_RTL_CP, 0),
COALESCE(NUM_TXNS_6MO_SLS_RTL_CP, 0),
COALESCE(NUM_TXNS_12MO_SLS_RTL_CP, 0),
COALESCE(NUM_TXNS_PLCC_6MO_SLS_RTL_CP, 0),
COALESCE(NUM_TXNS_PLCC_12MO_SLS_RTL_CP, 0),
COALESCE(NET_SALES_AMT_6MO_RTN_CP_RTL, 0),
COALESCE(NET_SALES_AMT_12MO_RTN_CP_RTL, 0),
COALESCE(ITEM_QTY_6MO_RTN_CP_RTL, 0),
COALESCE(ITEM_QTY_12MO_RTN_CP_RTL, 0),
COALESCE(NUM_TXNS_6MO_RTN_CP_RTL, 0),
COALESCE(NUM_TXNS_12MO_RTN_CP_RTL, 0),
COALESCE(VISASIG_FLAG, 0),
COALESCE(BASIC_FLAG, 0),
COALESCE(SILVER_FLAG, 0),
COALESCE(SISTER_FLAG, 0),
COALESCE(CARD_STATUS, 0),
COALESCE(DAYS_LAST_PUR_RTL, 365),
COALESCE(DAYS_LAST_PUR_CP_RTL, 365),
COALESCE(DAYS_ON_BOOKS, 0),
COALESCE(DAYS_ON_BOOKS_CP, 0),
COALESCE(DIV_SHP_RTL, 0),
COALESCE(DIV_SHP_CP_RTL, 0),
COALESCE(EMAILS_CLICKED, 0),
COALESCE(EMAILS_CLICKED_CP, 0),
COALESCE(EMAILS_OPENED, 0),
COALESCE(EMAILS_OPENED_CP, 0)
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED T1;





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_TXT;
CREATE EXTERNAL TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_TXT
(
CAMPAIGN_VERSION BIGINT,
CUSTOMER_KEY BIGINT,
EVENT_DATE STRING,
EMAILOPENFLAG INT,
EMAILCLICKFLAG INT,
RESPONDER INT,
NUM_TXNS BIGINT,
ITEM_QTY BIGINT,
GROSS_SALES_AMT DOUBLE,
DISCOUNT_AMT DOUBLE,
TOT_PRD_CST_AMT DOUBLE,
NET_SALES_AMT DOUBLE,
NET_MARGIN DOUBLE,
NET_SALES_AMT_6MO_SLS DOUBLE,
NET_SALES_AMT_12MO_SLS DOUBLE,
NET_SALES_AMT_PLCC_6MO_SLS DOUBLE,
NET_SALES_AMT_PLCC_12MO_SLS DOUBLE,
DISCOUNT_AMT_6MO_SLS DOUBLE,
DISCOUNT_AMT_12MO_SLS DOUBLE,
NET_MARGIN_6MO_SLS DOUBLE,
NET_MARGIN_12MO_SLS DOUBLE,
ITEM_QTY_6MO_SLS BIGINT,
ITEM_QTY_12MO_SLS BIGINT,
ITEM_QTY_ONSALE_6MO_SLS BIGINT,
ITEM_QTY_ONSALE_12MO_SLS BIGINT,
NUM_TXNS_6MO_SLS BIGINT,
NUM_TXNS_12MO_SLS BIGINT,
NUM_TXNS_PLCC_6MO_SLS BIGINT,
NUM_TXNS_PLCC_12MO_SLS BIGINT,
NET_SALES_AMT_6MO_RTN DOUBLE,
NET_SALES_AMT_12MO_RTN DOUBLE,
ITEM_QTY_6MO_RTN BIGINT,
ITEM_QTY_12MO_RTN BIGINT,
NUM_TXNS_6MO_RTN BIGINT,
NUM_TXNS_12MO_RTN BIGINT,
NET_SALES_AMT_6MO_SLS_CP DOUBLE,
NET_SALES_AMT_12MO_SLS_CP DOUBLE,
NET_SALES_AMT_PLCC_6MO_SLS_CP DOUBLE,
NET_SALES_AMT_PLCC_12MO_SLS_CP DOUBLE,
ITEM_QTY_6MO_SLS_CP BIGINT,
ITEM_QTY_12MO_SLS_CP BIGINT,
ITEM_QTY_ONSALE_6MO_SLS_CP BIGINT,
ITEM_QTY_ONSALE_12MO_SLS_CP BIGINT,
NUM_TXNS_6MO_SLS_CP BIGINT,
NUM_TXNS_12MO_SLS_CP BIGINT,
NUM_TXNS_PLCC_6MO_SLS_CP BIGINT,
NUM_TXNS_PLCC_12MO_SLS_CP BIGINT,
NET_SALES_AMT_6MO_RTN_CP DOUBLE,
NET_SALES_AMT_12MO_RTN_CP DOUBLE,
ITEM_QTY_6MO_RTN_CP BIGINT,
ITEM_QTY_12MO_RTN_CP BIGINT,
NUM_TXNS_6MO_RTN_CP BIGINT,
NUM_TXNS_12MO_RTN_CP BIGINT,
VISASIG_FLAG INT,
BASIC_FLAG INT,
SILVER_FLAG INT,
SISTER_FLAG INT,
CARD_STATUS INT,
DAYS_LAST_PUR INT,
DAYS_LAST_PUR_CP INT,
DAYS_ON_BOOKS INT,
DAYS_ON_BOOKS_CP INT,
DIV_SHP BIGINT,
DIV_SHP_CP BIGINT,
EMAILS_CLICKED BIGINT,
EMAILS_CLICKED_CP BIGINT,
EMAILS_OPENED BIGINT,
EMAILS_OPENED_CP BIGINT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
LOCATION '/user/xtghosh/${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED.TXT'
TBLPROPERTIES ('serialization.null.format' = '')
;



INSERT OVERWRITE TABLE ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED_TXT
SELECT 
CAMPAIGN_VERSION,
CUSTOMER_KEY,
EVENT_DATE,
COALESCE(EMAILOPENFLAG, 0),
COALESCE(EMAILCLICKFLAG, 0),
COALESCE(RESPONDER, 0),
COALESCE(NUM_TXNS, 0),
COALESCE(ITEM_QTY, 0),
COALESCE(GROSS_SALES_AMT, 0),
COALESCE(DISCOUNT_AMT, 0),
COALESCE(TOT_PRD_CST_AMT, 0),
COALESCE(NET_SALES_AMT, 0),
COALESCE(NET_MARGIN, 0),
COALESCE(NET_SALES_AMT_6MO_SLS, 0),
COALESCE(NET_SALES_AMT_12MO_SLS, 0),
COALESCE(NET_SALES_AMT_PLCC_6MO_SLS, 0),
COALESCE(NET_SALES_AMT_PLCC_12MO_SLS, 0),
COALESCE(DISCOUNT_AMT_6MO_SLS, 0),
COALESCE(DISCOUNT_AMT_12MO_SLS, 0),
COALESCE(NET_MARGIN_6MO_SLS, 0),
COALESCE(NET_MARGIN_12MO_SLS, 0),
COALESCE(ITEM_QTY_6MO_SLS, 0),
COALESCE(ITEM_QTY_12MO_SLS, 0),
COALESCE(ITEM_QTY_ONSALE_6MO_SLS, 0),
COALESCE(ITEM_QTY_ONSALE_12MO_SLS, 0),
COALESCE(NUM_TXNS_6MO_SLS, 0),
COALESCE(NUM_TXNS_12MO_SLS, 0),
COALESCE(NUM_TXNS_PLCC_6MO_SLS, 0),
COALESCE(NUM_TXNS_PLCC_12MO_SLS, 0),
COALESCE(NET_SALES_AMT_6MO_RTN, 0),
COALESCE(NET_SALES_AMT_12MO_RTN, 0),
COALESCE(ITEM_QTY_6MO_RTN, 0),
COALESCE(ITEM_QTY_12MO_RTN, 0),
COALESCE(NUM_TXNS_6MO_RTN, 0),
COALESCE(NUM_TXNS_12MO_RTN, 0),
COALESCE(NET_SALES_AMT_6MO_SLS_CP, 0),
COALESCE(NET_SALES_AMT_12MO_SLS_CP, 0),
COALESCE(NET_SALES_AMT_PLCC_6MO_SLS_CP, 0),
COALESCE(NET_SALES_AMT_PLCC_12MO_SLS_CP, 0),
COALESCE(ITEM_QTY_6MO_SLS_CP, 0),
COALESCE(ITEM_QTY_12MO_SLS_CP, 0),
COALESCE(ITEM_QTY_ONSALE_6MO_SLS_CP, 0),
COALESCE(ITEM_QTY_ONSALE_12MO_SLS_CP, 0),
COALESCE(NUM_TXNS_6MO_SLS_CP, 0),
COALESCE(NUM_TXNS_12MO_SLS_CP, 0),
COALESCE(NUM_TXNS_PLCC_6MO_SLS_CP, 0),
COALESCE(NUM_TXNS_PLCC_12MO_SLS_CP, 0),
COALESCE(NET_SALES_AMT_6MO_RTN_CP, 0),
COALESCE(NET_SALES_AMT_12MO_RTN_CP, 0),
COALESCE(ITEM_QTY_6MO_RTN_CP, 0),
COALESCE(ITEM_QTY_12MO_RTN_CP, 0),
COALESCE(NUM_TXNS_6MO_RTN_CP, 0),
COALESCE(NUM_TXNS_12MO_RTN_CP, 0),
COALESCE(VISASIG_FLAG, 0),
COALESCE(BASIC_FLAG, 0),
COALESCE(SILVER_FLAG, 0),
COALESCE(SISTER_FLAG, 0),
COALESCE(CARD_STATUS, 0),
COALESCE(DAYS_LAST_PUR, 365),
COALESCE(DAYS_LAST_PUR_CP, 365),
COALESCE(DAYS_ON_BOOKS, 0),
COALESCE(DAYS_ON_BOOKS_CP, 0),
COALESCE(DIV_SHP, 0),
COALESCE(DIV_SHP_CP, 0),
COALESCE(EMAILS_CLICKED, 0),
COALESCE(EMAILS_CLICKED_CP, 0),
COALESCE(EMAILS_OPENED, 0),
COALESCE(EMAILS_OPENED_CP, 0)
FROM ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_COMBINED T1;





DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_1; 

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_2;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_3;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_4;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_5;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_6;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_7;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_AGG_8;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_CUST_CARD_STATUS;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_LAST_PUR;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DAYS_ON_BOOKS;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_DIV_SHP;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILCLICKS;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_EMAILOPENS;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_1;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_${hiveconf:CAMPAIGN_VERSION}_TRANSACTIONS_2;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_2;

DROP TABLE IF EXISTS ${hiveconf:CURRENT_BRAND}_EM_${hiveconf:CAMPAIGN_VERSION}.${hiveconf:CURRENT_BRAND}_TXN_P365_${hiveconf:CAMPAIGN_VERSION}_3;

