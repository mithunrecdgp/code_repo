DATA DATAPREP_279925_ALL;
INFILE '\\10.8.8.51\LV0\MOVE TO BOX\MITHUN\PROJECTS\2.DISCOUNT SENSITIVITY\1. DATA\DS_TEST_APR16\DATAPREP_279925_ALL.TXT' DELIMITER = '|' MISSOVER DSD LRECL=32767 FIRSTOBS=2 ;

FORMAT CUSTOMER_KEY BEST32.;
FORMAT ADJUSTED_SCORE BEST32.;
FORMAT EVENT_TYPE $3.;
FORMAT CELL_KEY BEST32.;
FORMAT CELL_LABEL $50.;
FORMAT TREATMENT_CODE $40.;
FORMAT GROSS_SALES_AMT BEST32.;
FORMAT DISCOUNT_AMT BEST32.;
FORMAT TOT_PRD_CST_AMT BEST32.;
FORMAT ITEM_QTY BEST32.;
FORMAT NET_SALES_AMT BEST32.;
FORMAT NUM_TXNS BEST32.;
FORMAT AVG_ORD_SZ BEST32.;
FORMAT RESPONDER BEST32.;
FORMAT MASTERKEY $26.;
FORMAT POFFSET BEST32.;
FORMAT REVENUE BEST32.;
FORMAT SCORE BEST32.;
FORMAT LTV_APR16 BEST32.;
FORMAT DS_OPTIM_COMB BEST32.;
FORMAT S_OPTIM_CENTILE BEST32.;

INFORMAT CUSTOMER_KEY BEST32.;
INFORMAT ADJUSTED_SCORE BEST32.;
INFORMAT EVENT_TYPE $3.;
INFORMAT CELL_KEY BEST32.;
INFORMAT CELL_LABEL $50.;
INFORMAT TREATMENT_CODE $40.;
INFORMAT GROSS_SALES_AMT BEST32.;
INFORMAT DISCOUNT_AMT BEST32.;
INFORMAT TOT_PRD_CST_AMT BEST32.;
INFORMAT ITEM_QTY BEST32.;
INFORMAT NET_SALES_AMT BEST32.;
INFORMAT NUM_TXNS BEST32.;
INFORMAT AVG_ORD_SZ BEST32.;
INFORMAT RESPONDER BEST32.;
INFORMAT MASTERKEY $26.;
INFORMAT POFFSET BEST32.;
INFORMAT REVENUE BEST32.;
INFORMAT SCORE BEST32.;
INFORMAT LTV_APR16 BEST32.;
INFORMAT DS_OPTIM_COMB BEST32.;
INFORMAT S_OPTIM_CENTILE BEST32.;

INPUT
CUSTOMER_KEY
ADJUSTED_SCORE
EVENT_TYPE $
CELL_KEY
CELL_LABEL $
TREATMENT_CODE $
GROSS_SALES_AMT
DISCOUNT_AMT
TOT_PRD_CST_AMT
ITEM_QTY
NET_SALES_AMT
NUM_TXNS
AVG_ORD_SZ
RESPONDER
MASTERKEY $
POFFSET
REVENUE
SCORE
LTV_APR16
DS_OPTIM_COMB
S_OPTIM_CENTILE
;
RUN;


DATA DATAPREP_279925_ALL;
 SET DATAPREP_279925_ALL;
 TESTGRP = 1;
 IF TREATMENT_CODE = LOWCASE('CONTROL') THEN TESTGRP = 0;
 ARRAY TESTMISS(*) _NUMERIC_;                                            
 DO Z = 1 TO DIM(TESTMISS);                                              
  IF TESTMISS(Z)=. THEN TESTMISS(Z)=0;                                    
 END;                                                                     
RUN;

PROC FREQ DATA = DATAPREP_279925_ALL;
 TABLES TESTGRP;
RUN;

PROC SQL;
SELECT COUNT(*) INTO: TESTCOUNT FROM DATAPREP_279925_ALL WHERE TESTGRP=1;
QUIT;

%LET TESTINTV = %EVAL(&TESTCOUNT/10);

PROC SORT DATA=DATAPREP_279925_ALL
OUT=TEST;
BY DESCENDING DS_OPTIM_COMB DESCENDING NET_SALES_AMT;
WHERE TESTGRP=1;
RUN;


DATA TEST;
SET TEST;
IF _N_ GE 1 + 0 * ROUND(&TESTINTV) THEN SCORE_GRP=1;
IF _N_ GE 1 + 1 * ROUND(&TESTINTV) THEN SCORE_GRP=2;
IF _N_ GE 1 + 2 * ROUND(&TESTINTV) THEN SCORE_GRP=3;
IF _N_ GE 1 + 3 * ROUND(&TESTINTV) THEN SCORE_GRP=4;
IF _N_ GE 1 + 4 * ROUND(&TESTINTV) THEN SCORE_GRP=5;
IF _N_ GE 1 + 5 * ROUND(&TESTINTV) THEN SCORE_GRP=6;
IF _N_ GE 1 + 6 * ROUND(&TESTINTV) THEN SCORE_GRP=7;
IF _N_ GE 1 + 7 * ROUND(&TESTINTV) THEN SCORE_GRP=8;
IF _N_ GE 1 + 8 * ROUND(&TESTINTV) THEN SCORE_GRP=9;
IF _N_ GE 1 + 9 * ROUND(&TESTINTV) THEN SCORE_GRP=10;
RUN;

PROC FREQ DATA=TEST;
TABLE SCORE_GRP * RESPONDER;
RUN;


PROC SQL;
CREATE TABLE SUMMARY AS SELECT DISTINCT 
SCORE_GRP, 
COUNT(CUSTOMER_KEY) AS CUSTOMERS,
SUM(RESPONDER) AS RESPONDERS, 
SUM(NUM_TXNS) AS NUM_TXNS,
SUM(GROSS_SALES_AMT) AS GROSS_SALES,
SUM(DISCOUNT_AMT) AS DISCOUNTS, 
SUM(NET_SALES_AMT) AS NET_SALES,
SUM(ITEM_QTY) AS ITEM_QTY
FROM TEST
GROUP BY SCORE_GRP ORDER BY SCORE_GRP;
QUIT;
