LIBNAME TITANLIB "Z:\TANUMOY\WORKSPACE\DATA\TITAN";

OPTIONS MACROGEN SYMBOLGEN MPRINT MLOGIC;

%MACRO SAMPRETURNS(NUM_CUST, TYPESTR, LEVEL);
  
  %LET LIB=Z:\TANUMOY\WORKSPACE\DATA\TITAN;
  %LET TYPECOUNT=%EVAL(%SYSFUNC(COUNTW(&TYPESTR)));
  
  %DO SEQ=1 %TO &TYPECOUNT;

	  %LET TYPE=%SCAN("&TYPESTR",&SEQ," ");

	  PROC IMPORT DATAFILE="&LIB.\CUST_DECILES_&LEVEL._RTN_&TYPE..TXT" 
		 OUT=TITANLIB.CUST_DECILES_&LEVEL._RTN_&TYPE DBMS=DLM REPLACE; DELIMITER='|'; RUN;
	  
	 
	  DATA TITANLIB.CUST_DECILES_&LEVEL._RTN_&TYPE;
	   FORMAT CUST_TYPE $8.;
	   SET TITANLIB.CUST_DECILES_&LEVEL._RTN_&TYPE;
	   RENAME VAR1=TITAN_CUST_ID;
	   AVG_ORD_SZ=NET_DMD_AMT/NUM_TXNS;
	   CUST_TYPE="&TYPE";
	  RUN;

	  %DO I=1 %TO 10;

		%IF %EVAL(&I) <=3 OR %EVAL(&I)>=8 %THEN %DO;
		 
			DATA TEST&I;
			 SET TITANLIB.CUST_DECILES_&LEVEL._RTN_&TYPE;
			 IF &I <=3 THEN RTN_GRP=0;
			 IF &I >=8 THEN RTN_GRP=1;
			 RANK+1;
			 IF DECILES = &I;
			 OUTPUT;
			RUN;

			PROC SQL;
			 SELECT MAX(RANK) INTO : MAX_RANK FROM TEST&I;
			QUIT;

			%IF &I<=3 %THEN %DO;
			  DATA TEST&I;
			   SET TEST&I(OBS=&NUM_CUST);
			  RUN;
		    %END;
			
			%IF &I>=8 %THEN %DO;
			  DATA TEST&I;
			   SET TEST&I;
			   WHERE RANK>=&MAX_RANK-(&NUM_CUST-1);
			  RUN;
			%END;
            

			%IF &I=1 %THEN %DO;
			DATA TITANLIB.CUST_DECILES_&LEVEL._&TYPE._SAMP;
			 SET TEST&I;
			RUN;
			%END;

			%IF &I>1 %THEN %DO;
			PROC APPEND BASE=TITANLIB.CUST_DECILES_&LEVEL._&TYPE._SAMP DATA=TEST&I FORCE;
			RUN;
			%END;

			PROC SQL;
			 DROP TABLE TEST&I;
			QUIT;

		%END;

	  %END;

	  %IF &SEQ=1 %THEN %DO;
		DATA TITANLIB.CUST_SAMP_DECILES_&LEVEL;
		 SET TITANLIB.CUST_DECILES_&LEVEL._&TYPE._SAMP;
		RUN;
	  %END;
	  
	  %IF &SEQ>1 %THEN %DO;
	    PROC APPEND BASE=TITANLIB.CUST_SAMP_DECILES_&LEVEL DATA=TITANLIB.CUST_DECILES_&LEVEL._&TYPE._SAMP FORCE;
		RUN;
	  %END;
      
	  PROC SQL;
	   DROP TABLE TITANLIB.CUST_DECILES_&LEVEL._&TYPE._SAMP;
	  QUIT;

  %END;

  PROC SQL UNDO_POLICY=NONE;
   %IF &LEVEL=AGG %THEN %DO;
     CREATE TABLE TITANLIB.CUST_TXN_SAMP_&LEVEL AS SELECT T1.*,T2.RTN_GRP, T2.DECILES, T2.CUST_TYPE 
        FROM TITANLIB.MEA_ORD_LN_PURCHASE T1, TITANLIB.CUST_SAMP_DECILES_&LEVEL T2 
		WHERE T1.TITAN_CUST_ID=T2.TITAN_CUST_ID;  
   %END;
   %IF &LEVEL NE AGG %THEN %DO;
     CREATE TABLE TITANLIB.CUST_TXN_SAMP_&LEVEL AS SELECT T1.*,T2.RTN_GRP, T2.DECILES, T2.CUST_TYPE 
        FROM TITANLIB.MEA_ORD_LN_PURCHASE T1, TITANLIB.CUST_SAMP_DECILES_&LEVEL T2 
		WHERE T1.TITAN_CUST_ID=T2.TITAN_CUST_ID AND T1.PRD_BRD_CD="&LEVEL";
   %END;  
  QUIT;
  
  PROC EXPORT DATA=TITANLIB.CUST_TXN_SAMP_&LEVEL
   OUTFILE="&LIB.\CUST_TXN_SAMP_&LEVEL..TXT" DBMS=DLM REPLACE;
   DELIMITER='|';
  RUN;
 
%MEND;

%SAMPRETURNS(NUM_CUST=1000,TYPESTR=ACTV REACTV NEW,LEVEL=BROL);
%SAMPRETURNS(NUM_CUST=1000,TYPESTR=ACTV REACTV NEW,LEVEL=GOL);
%SAMPRETURNS(NUM_CUST=1000,TYPESTR=ACTV REACTV NEW,LEVEL=ONOL);
%SAMPRETURNS(NUM_CUST=1000,TYPESTR=ACTV REACTV NEW,LEVEL=GPSV);
%SAMPRETURNS(NUM_CUST=1000,TYPESTR=ACTV NEW,LEVEL=ATOL);
%SAMPRETURNS(NUM_CUST=1000,TYPESTR=ACTV REACTV NEW,LEVEL=AGG);



